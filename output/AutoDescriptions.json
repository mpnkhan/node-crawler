[
  {
    "Sino": 1,
    "RuleID": "accesskeys",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures every accesskey attribute value is unique",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/accesskeys?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 2,
    "RuleID": "area-alt",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: alt text on active image map area",
    "SuccessCriteria": "wcag244,wcag412",
    "Description [Deque]": "An image map is a single image with many clickable areas. Like all images, an image map must have alternate text for each of the different clickable areas, as well as for the larger image itself, since screen readers have no way of translating graphics into text.",
    "Description (2) [accessiblity insights] Microsoft": "Active <area> elements must have alternative text.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An active <area> element has no alt text. This is an accessibility failure.\n\nImage maps are single images with several clickable areas. Each of these visually defined areas must have an alternate text, and the entire image must have its own alt text as well.\n \nExample: An image map of the United States with each state set as an area. Each state should have its name, size, and coordinates included in its alt text, and the entire image map should have meaningful alt text, e.g., \"Map of the United States with clickable state areas.",
    "Recommendation": "Action: Add alternative text to each <area> element.\n \nHow to fix:\nUse ONE of the following methods:\n \nGood:\n• title attribute\n \nBetter:\n• aria-label\n \nBest:\n• aria-labelledby attribute\n• alt attribute\n \nTo accommodate for different browsers and devices:\n• Use every image map only once. If the same image map is used in another place, or multiple images use the same image map, the map must be duplicated and given different IDs.\n• Place the <map> element as a direct sibling to the image.\n• For mobile: Provide redundant text links on the same page, to replace possibly non-functional image maps.",
    "ValueStatement": "The intent of the multiple selectable areas in an image map is to visually communicate the individual purpose of each clickable area, e.g., using color, shapes, image elements, etc.\n\nHowever, screen readers and assistive tech users who are blind or visually impaired have no way to access this visually conveyed information without appropriate alt text.\n \nExample: A group photo with each person set as a clickable area.",
    "SuggestedCode": "Each <area> element in an image map must have an alt attribute that identifies its corresponding location. All users must be equally offered the information they need to make an informed selection.\n \nExample:\n<p>Select a location to see our business hours:</p>\n <img src=\"locations.png\" width=\"800\" height=\"400\" alt=\"Map of business locations\" usemap=\"#locations-map\">\n <map name=\"locations-map\">\n <area shape=\"rect\" coords=\"0,0,200,400\" alt=\"Corporate headquarters\" href=\"location1.htm\">\n <area shape=\"rect\" coords=\"0,0,400,400\" alt=\"Elm Street store\" href=\"location2.htm\">\n <area shape=\"rect\" coords=\"0,0,600,400\" alt=\"Maple Street store\" href=\"location3.htm\">\n </map>",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.4/, https://accessibilityinsights.io/info-examples/web/area-alt/\n \n https://www.w3.org/WAI/tutorials/images/imagemap/",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 3,
    "RuleID": "aria-allowed-attr",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Illicit ARIA attribute in role",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Not all ARIA role-attribute combinations are valid. This Rule checks that each role is supplied with allowed attributes.",
    "Description (2) [accessiblity insights] Microsoft": "Elements must use only ARIA attributes allowed for their ARIA role.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "ARIA attributes that are not allowed are set in this role.",
    "Recommendation": "Action: Make sure only allowed and appropriate ARIA attributes are used for the element role in question.\n \nHow to fix:\nFollow these steps:\n \n1. Identify the ARIA role that best represents the element's function.\n2. Examine the element in the browser accessibility pane to verify that it has the correct role attribute.\n3. Use only ARIA state and property attributes that are allowed for the given role.\n4. Make sure the value of each ARIA property attribute is correct.\n5. Make sure the value of each ARIA state attribute updates as needed to reflect the element's current state.",
    "ValueStatement": "When assistive tech encounters a mismatch between an element's role and its state or property attributes, it might ignore attributes or respond in an unexpected way. As a result, screen reader and assistive tech users are likely to find the element difficult or impossible to use.\n \nAn ARIA role attribute can be added to an element to instruct assistive tech to treat the element as something other than its native HTML element type.\n \nExample: An <a> element with role=\"button\" is to be treated as a button, not a link.\n \nSome ARIA property and state attributes are only allowed for certain ARIA roles.",
    "SuggestedCode": "Use the correct ARIA state attribute (e.g., aria-selected=\"true\") for the option role. The attribute's value is updated through scripting to ensure it correctly communicates the current state to assistive tech.\n \nExample: <button role=\"option\" aria-selected=\"true\" id=\"available\">Available items</button>",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.4/aria-allowed-attr ; https://accessibilityinsights.io/info-examples/web/aria-allowed-attr/",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious, Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 4,
    "RuleID": "aria-allowed-role",
    "Level": "",
    "Checkpoint": "",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures role attribute has an appropriate value for the element",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 5,
    "RuleID": "aria-command-name",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: accessible name on ARIA button/link",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "ARIA command elements must have discernible text that clearly describes the destination, purpose, function, or action for screen reader users.",
    "Description (2) [accessiblity insights] Microsoft": "ARIA buttons, links, and menuitems must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "This ARIA button or link is missing a required accessible name that clearly describes its destination, purpose, function, or action, for screen reader and assistive tech users. Missing names are an accessibility failure.",
    "Recommendation": "Action: Be sure all ARIA buttons and links have correct, meaningful accessible names.\n \nHow to fix:\nFollow these steps:\n1. Examine the element in the browser accessibility pane to verify that it has the correct role attribute.\n2. Identify the ARIA role that best identifies the element's function.\n3. Assign a valid ARIA role if needed.\n \nNote: Some ARIA roles, while technically valid, are not widely supported by assistive technologies.",
    "ValueStatement": "When an ARIA button or link has no accessible name, screen reader and assistive tech users have no way to perceive its purpose.\n \nARIA buttons and links are custom controls corresponding respectively to HTML <button>, and <a> elements with valid href attributes.\n \nNote: There is no <menuitem> element in HTML; it has been deprecated.\n \nAccessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.",
    "SuggestedCode": "Visible inner text should be added to the <a> element, giving the button an accessible name. Its purpose will then be equally communicated to everyone.\n \n <a tabindex=\"0\" role=\"button\" id=\"mute\" aria-pressed=\"false\">Mute\n <svg aria-hidden=\"true\" focusable=\"false\">\n <use xlink:href=\"images/mute.svg#icon-sound\">\n </use>\n </svg>\n </a>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/aria-command-name/ ; https://dequeuniversity.com/rules/axe/4.4/aria-command-name",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n Low Vision\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 6,
    "RuleID": "aria-dialog-name",
    "Level": "",
    "Checkpoint": "",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures every ARIA dialog and alertdialog node has an accessible name",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "Yes",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/aria-dialog-name?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "Blind",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 7,
    "RuleID": "aria-hidden-body",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Inaccessible/hidden information",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Document content is not accessible to assistive technology if <body aria-hidden=\"true\">.Document content is not accessible to assistive technology if <body aria-hidden=\"true\">.",
    "Description (2) [accessiblity insights] Microsoft": "The attribute aria-hidden=\"true\" must not be used on the <body> element.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "The ARIA attribute aria-hidden=\"true\" is used on the <body> element: this is not allowed. The <body> element contains information that should be available to everyone.",
    "Recommendation": "Action: Make sure the <body> element information is perceivable by all users.\n \nHow to fix:\nRemove aria-hidden=\"true\" from the <body> element.\n \nDo not use aria-hidden=\"true\", EXCEPT on elements whose content is decorative-only, repetitive, or otherwise not informative for screen reader and assistive tech users.\n \nNote: When an element's parent has aria-hidden=\"true\", adding aria-hidden=\"false\" to the child element does not reveal it to assistive tech, and will not fix this problem.",
    "ValueStatement": "In some browsers, aria-hidden=\"true\" hides an element and all its child elements from assistive tech.\n \nSome users can still navigate via keyboard to any focusable child elements in the <body>. However, the content is inaccessible to assistive tech users. For example, screen readers remain silent, and will not announce the element.",
    "SuggestedCode": "Never apply the aria-hidden=\"true\" attribute to the <body> element.\n \nInstead, when the dialog is open, elements outside the dialog can be removed from the tab order. <body class=\"has-dialog\">\n \nExample:\n …\n <button class=\"action-button\" tabindex=\"-1\">Sign in</button>\n …",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/aria-hidden-body/ ; https://dequeuniversity.com/rules/axe/4.4/aria-hidden-body",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 8,
    "RuleID": "aria-hidden-focus",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Inaccessible/hidden focusable element",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "This rule checks aria-hidden elements do not contain focusable elements.",
    "Description (2) [accessiblity insights] Microsoft": "Elements with aria-hidden=\"true\" must not contain focusable elements.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An element with the aria-hidden=\"true\" attribute contains focusable elements. This is not allowed.",
    "Recommendation": "Action: Make sure elements with aria-hidden=\"true\" do not contain focusable elements.\n \nHow to fix:\nUse one or more of the following methods:\n \n1. Use aria-hidden=\"true\" ONLY on elements whose content is decorative-only, repetitive, or otherwise not informative for screen reader and assistive tech users.\n \n2. Restructure the code so that the focusable elements are not children of the hidden element:\n  2a. Where appropriate, make the child elements non-focusable (by applying the disabled attribute) or non-tabbable (by applying tabindex=\"-1\").\n  2b. Where appropriate, hide elements from all users by applying hidden, display:none, or visibility:hidden attributes.",
    "ValueStatement": "In some browsers, aria-hidden=\"true\" hides an element and all its child elements from assistive tech.\n \nSome users can still navigate via keyboard to any focusable child elements in the <body>. However, the content there is then inaccessible to assistive tech users. For example, screen readers remain silent, and will not announce the element.\n \nFocusable (definition): An element is focusable if it can receive input focus via scripting, mouse interaction, or keyboard tabbing.",
    "SuggestedCode": "When the alert is positioned off-screen, its OK button is marked with tabindex=\"-1\". Keyboard users encounter the button only when the alert is on-screen.",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/aria-hidden-focus/ ;https://dequeuniversity.com/rules/axe/4.4/aria-hidden-focus",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n Low Vision\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (AA)",
    "BestPractice": ""
  },
  {
    "Sino": 9,
    "RuleID": "aria-input-field-name",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: accessible name on ARIA input field",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Ensures every ARIA input field has an accessible name.",
    "Description (2) [accessiblity insights] Microsoft": "ARIA input fields must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "Yes",
    "Description3 [UserWay]": "An ARIA input field is missing a required accessible name that clearly describes its destination, purpose, function, or action for screen reader and assistive tech users. Missing names are an accessibility failure.",
    "Recommendation": "Action: Add an accessible name to each ARIA input field.\n \nHow to fix:\nUse ONE of the following methods:\n \nGood:\n• title\n \nBetter:\n• aria-label\n \nBest:\n• aria-labelledby",
    "ValueStatement": "Unlike a standard HTML control, an ARIA input field requires additional markup to ensure it has an accessible name that conveys its purpose to assistive tech users.\n \nAn ARIA input field is a custom control that allows users to provide text input.\n \nARIA input fields are identified by the following ARIA roles:\n• combobox\n• listbox\n• searchbox\n• slider\n• spinbutton\n• textbox\n \nAccessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.",
    "SuggestedCode": "An aria-labelledby attribute is used to make the visible text into an accessible name. Everyone can then perceive its purpose.\n \n <span id=\"select_level\">Select a service level:</span>\n <ul id=\"option_list\" tabindex=\"0\" role=\"listbox\" aria-labelledby=\"select_level\">\n <li id=\"service1\" role=\"option\">Level 1</li>\n <li id=\"service2\" role=\"option\">Level 2</li>\n <li id=\"service3\" role=\"option\">Level 3</li>\n </ul>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/aria-input-field-name/ ; https://dequeuniversity.com/rules/axe/4.4/aria-input-field-name",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 10,
    "RuleID": "aria-meter-name",
    "Level": "A",
    "Checkpoint": "1.1.1 Non-text content",
    "Category": "Content",
    "Summary": "Missing: accessible name on meter element",
    "SuccessCriteria": "wcag111",
    "Description [Deque]": "Aria meter elements must have discernible text that clearly describes the destination, purpose, function, or action for screen reader users.",
    "Description (2) [accessiblity insights] Microsoft": "ARIA meters must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An ARIA meter element is missing an accessible name that clearly describes its destination, purpose, function, or action for screen reader and assistive tech users. Missing names are an accessibility failure.",
    "Recommendation": "Action: For each element with role=\"meter\", add an accessible name.\n \nHow to fix:\nUse ONE of the following methods:\n \nGood:\n• title attribute\n \nBetter:\n• aria-label attribute\n \nBest:\n• aria-labelledby attribute referencing visible text",
    "ValueStatement": "When an ARIA meter has no accessible name, screen reader and assistive tech users have no way to perceive its purpose.\n \nMeter (definition): An ARIA meter is a custom control corresponding to the HTML <meter> element.\n \nA meter represents either a scalar value within a known range, or a fractional value.\n \nExample: A meter might represent the unused portion of total storage capacity.\n \nAccessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.",
    "SuggestedCode": "The <label> element should be replaced with a <p> element, and a programmatic association created by an aria-labelledby attribute on the <div>.\n \nThe ARIA meter now has an accessible name that is available to all users.\n \nExample:\n<p id=\"disk-usage-label\">Disk Usage</p>\n <div role=\"meter\" aria-valuenow=\"90\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-labelledby=\"disk-usage-label\">\n <svg width=\"100\" height=\"100\" class=\"fill\" aria-hidden=\"true\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"currentColor\">\n </rect>\n </svg>\n </div>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/aria-meter-name/; https://dequeuniversity.com/rules/axe/4.4/aria-meter-name",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n Low Vision\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 11,
    "RuleID": "aria-progressbar-name",
    "Level": "A",
    "Checkpoint": "1.1.1 Non-text content",
    "Category": "Content",
    "Summary": "Missing: accessible name on progressbar element",
    "SuccessCriteria": "wcag111",
    "Description [Deque]": "Aria progressbar elements must have discernible text that clearly describes the destination, purpose, function, or action for screen reader users.",
    "Description (2) [accessiblity insights] Microsoft": "ARIA progressbars must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An ARIA progressbar element is missing an accessible name that clearly describes its destination, purpose, function, or action for screen reader and assistive tech users. Missing names are an accessibility failure.",
    "Recommendation": "Action: For each element with role=\"progressbar\", add an accessible name.\n \nHow to fix:\nUse ONE of the following methods:\n \nGood:\n• title attribute\n \nBetter\n• aria-label attribute\n \nBest\n• aria-labelledby attribute referencing visible text",
    "ValueStatement": "When an ARIA progressbar has no accessible name, assistive tech users have no way to perceive its purpose.\n \nProgressbar (definition): An ARIA progressbar is a custom control corresponding to the HTML <progress> element. A progressbar represents progress on a task that takes a long time to complete.\n \nAccessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.",
    "SuggestedCode": "The <label> element is replaced with a <p> element, and a programmatic association is created by an aria-labelledby attribute on the <div>.\n \n The ARIA meter now has an accessible name that is available to all users. \n \n <p id=\"progressbar-label\">Disk Usage</p>\n <div role=\"meter\" aria-valuenow=\"90\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-labelledby=\"progressbar-label\">\n <svg width=\"100\" height=\"100\" class=\"fill\" aria-hidden=\"true\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"currentColor\">\n </rect>\n </svg>\n </div>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/aria-progressbar-name/ ; https://dequeuniversity.com/rules/axe/4.4/aria-progressbar-name",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n Low Vision\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 12,
    "RuleID": "aria-required-attr",
    "Level": "",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: required ARIA role/attribute",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "ARIA widget roles must have appropriate attributes describing the state or properties of the widget.",
    "Description (2) [accessiblity insights] Microsoft": "Required ARIA attributes must be provided.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "A required ARIA role or attribute is not provided. This is considered an accessibility failure.\n \nARIA widget roles must have appropriate attributes describing their properties or state.",
    "Recommendation": "Action: Be sure to appropriately set all required ARIA roles and attributes.\n \nHow to fix:\nFollow these steps:\n \n1. Identify the ARIA role that best represents the element's function.\n2. Examine the element in the browser accessibility pane to verify that it has the correct role attribute.\n3. Use only ARIA state and property attributes that are allowed for the given role.\n4. Make sure the value of each ARIA property attribute is correct.\n5. Make sure the value of each ARIA state attribute updates as needed to reflect the element's current state.",
    "ValueStatement": "An ARIA role attribute can be added to an element to instruct assistive tech to treat the element as something other than its native HTML element type. For example, an <a> element with role=\"button\" is to be treated as a button, not a link.\n \nSome ARIA role attributes require additional ARIA attributes to communicate the control's properties or current state.\n \nAssistive tech users might find it difficult or impossible to use an element that is missing a required ARIA attribute.",
    "SuggestedCode": "The aria-checked attribute should be added to the element.\n \nThe attribute's value is updated through scripting to ensure it always communicates the correct current state to assistive tech.\n \nExample:\n<div role=\"checkbox\" aria-checked=\"false\" tabindex=\"0\">Keep me signed in</div>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/aria-required-attr/ ; https://dequeuniversity.com/rules/axe/4.4/aria-required-attr",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 13,
    "RuleID": "aria-required-children",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "ARIA parent role missing child role",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "Some ARIA parent role values applied to elements must contain specific child elements and role values to perform intended accessibility function.",
    "Description (2) [accessiblity insights] Microsoft": "Certain ARIA roles must contain particular children.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An ARIA parent role is missing a required specific child role that is needed for the parent role to perform its intended accessibility functions.",
    "Recommendation": "Action: Be sure to include all appropriate child elements and roles within the ARIA parent roles that require them.\n\nHow to fix:\n1. Identify the ARIA role that best identifies the element's function.\n2. In the browser accessibility pane, examine the element serving as the managing control to verify it has the correct \"parent\" role attribute.\n3. Identify the elements serving as managed controls and add the appropriate \"child\" roles to them.\n4. Apply any ARIA state and property attributes that are required for the given roles.\n5. Make sure the value of each ARIA property attribute is correct.\n6. Make sure the value of each ARIA state attribute updates as needed to reflect the element's current state.",
    "ValueStatement": "Assistive tech users might find it difficult or impossible to use a composite control if its managed controls lack the required child role.\n \nAn ARIA role attribute can be added to an element to instruct assistive tech to treat the element as something other than its native HTML element type.\n \nExample: A <ul> element with role=\"listbox\" is to be treated as a listbox control, not as a static list.\n \nSome ARIA \"parent\" roles identify composite controls that always include managed controls, identified by \"child\" roles.\n \nExample: role=\"listbox\" identifies a composite control that manages a set of managed controls identified by role=\"option\".",
    "SuggestedCode": "The children of a radiogroup parent are marked with role=\"radio\". Assistive tech can therefore identify the managed controls as radio buttons.\n \nIn addition, an attribute required by the radio role (aria-checked) has been added to each radio button.\n \nThese attribute values are updated through scripting to ensure they always communicate the correct current state to assistive tech.\n \nExample: \n <div role=\"radiogroup\" aria-labelledby=\"size\" id=\"rg1\">\n <h3 id=\"size\">T-shirt size:</h3>\n <div role=\"radio\" aria-checked=\"false\" tabindex=\"0\">Small</div>\n <div role=\"radio\" aria-checked=\"true\" tabindex=\"-1\">Medium</div>\n <div role=\"radio\" aria-checked=\"false\" tabindex=\"-1\">Large</div>\n </div>",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.4/aria-required-children \n https://accessibilityinsights.io/info-examples/web/aria-required-children/",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 14,
    "RuleID": "aria-required-parent",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "ARIA child role missing parent role",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "Certain ARIA roles must be contained by particular parent roles in order to perform the intended accessibility functions.",
    "Description (2) [accessiblity insights] Microsoft": "Certain ARIA roles must be contained by particular parent elements.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "Certain ARIA roles must be contained by specific parent roles, or they will be unable to perform their intended accessibility functions.",
    "Recommendation": "Action: Be sure to contain all child roles within their appropriate ARIA parent roles, as required.\n \nHow to fix:\n1. Identify the ARIA role that best represents the element's function.\n2. In the browser accessibility pane, examine the elements serving as the managed controls to verify they have the correct \"child\" role attributes.\n3. Add parent role:\n 3a. Identify (or add) the element serving as the managing control, and\n 3b. Add the appropriate \"parent\" role to it.\n4. Apply any ARIA state and property attributes that are required for the given roles:\n  4a. Make sure the value of each ARIA property attribute is correct.\n  4b. Make sure the value of each ARIA state attribute updates as needed to reflect the element's current state.",
    "ValueStatement": "Assistive tech users might find it difficult or impossible to use a child control if its managing control lacks the required parent role.\n \nAn ARIA role attribute can be added to an element to instruct assistive tech to treat the element as something other than its native HTML element type. For example, an <li> element with role=\"option\" is to be treated as a selectable option in a listbox control, not as a static list item.\n \nSome ARIA \"child\" roles identify managed controls that are always part of a larger composite control, identified by a \"parent\" role. For example, role=\"option\" identifies a child control that is managed by a parent control identified by role=\"listbox\".",
    "SuggestedCode": "The parent of the menuitem children is marked with role=\"menu\". Assistive tech can inform users that the managing control is a menu. In addition, the menu has been given an accessible name by adding an aria-label attribute to the parent element. All <li> elements should be marked with role=\"none\" to remove the implied listitem role.\n \n <ul id=\"myaccount\" role=\"menu\" aria-label=\"My Account\">\n <li role=\"none\">\n <a role=\"menuitem\" href=\"#\" tabindex=\"0\">Profile</a>\n <li role=\"none\">\n <a role=\"menuitem\" href=\"#\" tabindex=\"0\">Preferences </a>\n </li>\n </ul>",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.4/aria-required-parent ; https://accessibilityinsights.io/info-examples/web/aria-required-parent/",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 15,
    "RuleID": "aria-roledescription",
    "Level": "",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Illicit use of aria-roledescription",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Ensures that the aria-roledescription attribute is only used on elements with an implicit or explicit role values.",
    "Description (2) [accessiblity insights] Microsoft": "The aria-roledescription attribute must be used only on elements with a supported role.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "The aria-roledescription attribute is used incorrectly. It may be used ONLY on elements with a supported role, i.e., an implicit or explicit role value.",
    "Recommendation": "Action: Use aria-roledescription only on elements that have an explicit or implicit ARIA role.\n \nHow to fix:\n1. Examine all elements that use the aria-roledescription attribute.\n2. Do the elements have an implicit or explicit role value or values?\n3. If not, remove the attribute.\n \nImplicit role (definition): An implicit ARIA role is derived from the element itself. For example, a <button> element has an implicit role of button.\n \nFor a list of HTML elements and their implicit roles, see ARIA in HTML. Elements noted as having \"No corresponding role\" have no implicit ARIA role.\n \nExplicit role (definition): You can add an explicit ARIA role using the role attribute.\n \nExample: Adding role=\"button\" to a <div> element changes the element's role to button.",
    "ValueStatement": "The aria-roledescription attribute is used to override how assistive tech reports an element's role.\n \nExample: Assistive tech typically announces a <button> element (or a <div> with role=\"button\" ) as a \"button\". If aria-roledescription=\"slider button\" were added to either element, assistive tech would announce it instead as a \"slider button\".\n\nAssistive tech reports an element's role only when the role is semantic (has inherent meaning).\n \nExample: Assistive tech users are informed when they encounter links, buttons, or images, but not when they encounter semantically neutral elements, such as <span> or <div> or <p> elements.\n \nThe aria-roledescription attribute changes only HOW an element's role is reported, not necessarily whether it's reported. Assistive tech might not announce a semantically neutral element, even if it has an aria-roledescription attribute.\n \nAs a result, assistive tech users might not discover that such an element exists.",
    "SuggestedCode": "An explicit ARIA role is applied using role=\"button\".\n \nAssistive tech announces the element because it has a semantic role.\n \n he aria-roledescription attribute instructs assistive tech to identify the element to users as a \"download button.\"\n \n<div role=\"button\" tabindex=\"0\" aria-roledescription=\"download button\">Download</div>",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.4/aria-roledescription ; https://accessibilityinsights.io/info-examples/web/aria-roledescription/",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 16,
    "RuleID": "aria-roles",
    "Level": "",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "ARIA role has invalid value",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Values assigned to ARIA role values must be valid. Role values must be spelled correctly, correspond to existing ARIA role values, and must not be abstract roles to correctly expose the purpose of the element.",
    "Description (2) [accessiblity insights] Microsoft": "ARIA roles must have valid values.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An invalid ARIA role value is in use; it will not correctly convey the element's purpose.\n\nValid roles have correct spelling, match existing ARIA role values, and are not abstract roles.",
    "Recommendation": "Action: Add a valid value to the role attribute. Use ONLY valid values for all ARIA roles.\n \nHow to fix:\n1. Make sure the value is spelled correctly.\n2. Make sure the role value exists. For example, a common mistake is to specify the invalid role \"footer\" when the valid role is \"contentinfo\".\n3. Make sure the role is not abstract.\n4. Remove any invalid values.",
    "ValueStatement": "When assistive tech encounters an element whose role attribute has an invalid value, it might ignore the element or respond to it in an unexpected way. As a result, assistive tech users might find the element difficult or impossible to detect or use.\n \nAn ARIA role attribute can be added to an element to instruct assistive tech to treat the element as something other than its native HTML element type.\n \nExample: An <a> element with role=\"button\" will be treated as a button, not as a link.",
    "SuggestedCode": "The child elements must have valid role attribute values. Assistive tech can then report the elements as radio buttons.\n \n \n <div role=\"radiogroup\" aria-labelledby=\"size\" id=\"rg1\">\n <h3 id=\"size\">T-shirt size:</h3>\n <div role=\"radio\" aria-checked=\"false\" tabindex=\"0\">Small</div>\n <div role=\"radio\" aria-checked=\"false\" tabindex=\"-1\">Medium</div>\n <div role=\"radio\" aria-checked=\"false\" tabindex=\"-1\">Large</div>\n </div>",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.4/aria-roles ; https://accessibilityinsights.io/info-examples/web/aria-roles/",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 17,
    "RuleID": "aria-text",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures \"role=text\" is used on elements with no focusable descendants",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/aria-text?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 18,
    "RuleID": "aria-toggle-field-name",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: accessible name on toggle field",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Ensures every ARIA toggle field has an accessible name.",
    "Description (2) [accessiblity insights] Microsoft": "ARIA toggle fields must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An ARIA toggle field has no appropriate accessible name.",
    "Recommendation": "Action: Set an accessible name for each ARIA toggle field.\n \nHow to fix:\nUse ONE of the following methods:\n \nGood\n• title attribute\n \nBetter\n• aria-label attribute\n• aria-labelledby attribute\n \nBest\n• Inner text that's available to assistive technologies (not marked with display: none or aria-hidden=\"true\" )\n• <label> element (applies only to controls based on form elements)",
    "ValueStatement": "Without an appropriate accessible name, ARIA toggle field information will not be communicated to screen reader and assistive tech users.\n \nARIA toggle field (definition): A custom control that allows users to toggle its checked value.\n \nARIA toggle fields are identified by the following ARIA role attributes:\n• checkbox\n• menuitemcheckbox\n• menuitemradio\n• radio\n• switch\n \nAccessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.\n \nUnlike a standard HTML control, an ARIA toggle field requires additional markup to ensure it has an accessible name that conveys its purpose to assistive tech users.",
    "SuggestedCode": "The <label> element should be changed to a to a <p>, and the <span> should be given an aria-labelledby attribute that refers to the <p>. A programmatic association between the <span> and <p> elements is then successfully created, so the switch now has an accessible name. Assistive tech can now tell users that the switch toggles the dark theme.\n \n <p id=\"dark-label\">Dark theme</p>\n <span id=\"dark-theme\" role=\"switch\" aria-checked=\"false\" tabindex=\"0\" aria-labelledby=\"dark-label\"></span>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/aria-toggle-field-name/ ; https://dequeuniversity.com/rules/axe/4.4/aria-toggle-field-name",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 19,
    "RuleID": "aria-tooltip-name",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: accessible name on tooltip",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Aria tooltip elements must have discernible text that clearly describes the destination, purpose, function, or action for screen reader users.",
    "Description (2) [accessiblity insights] Microsoft": "ARIA tooltips must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An ARIA tooltip has no appropriate accessible name; there is no way to clearly describe the tooltip's destination, purpose, function, or action for screen reader and assistive tech users.",
    "Recommendation": "Action: For each element with role=\"tooltip\", provide an accessible name.\n \nHow to fix:\nUse one of the following methods:\n \nGood\n• title attribute\n \nBetter\n• aria-label attribute\n• aria-labelledby attribute referencing visible text\n \nBest\n• Visible inner text that is available to assistive tech (not marked with display:none or aria-hidden=\"true\")",
    "ValueStatement": "ARIA tooltip (definition): A contextual popup with text describing an interface element. The tooltip typically becomes visible when the mouse hovers over, or focus is received by, the owning element.\n \nAccessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.\n \nWhen an ARIA tooltip has no accessible name, assistive tech users have no way to perceive its purpose.",
    "SuggestedCode": "Text is added to the <p> element, giving it an accessible name.\n \nEveryone can tell that the button allows you to edit your settings. \n \n<button type=\"button\" aria-describedby=\"description\">\n<span role=\"img\" aria-label=\"Settings\">⚙️</span>\n </button>\n <p id=\"description\" role=\"tooltip\">Edit your settings</p>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/aria-tooltip-name/ ; https://dequeuniversity.com/rules/axe/4.4/aria-tooltip-name",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n Low Vision\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 20,
    "RuleID": "aria-treeitem-name",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures every ARIA treeitem node has an accessible name",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/aria-treeitem-name?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 21,
    "RuleID": "aria-valid-attr-value",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Invalid value: ARIA attribute",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "ARIA attributes starting with aria- must contain valid values. These values must be spelled correctly and correspond to values that make sense for a particular attribute in order to perform the intended accessibility function.",
    "Description (2) [accessiblity insights] Microsoft": "ARIA attributes must have valid values.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "Invalid values in ARIA attributes block intended accessibility functions; these functions cannot be actioned if values do not have correct spelling or do not correspond to existing ARIA values that logically apply to a specific attribute.",
    "Recommendation": "Action: Set a valid value for each ARIA attribute. Use ONLY valid values for all ARIA attributes.\n \nHow to fix:\n1. Make sure you are using the correct type of value. (For example, some attributes allow only \"true\" or \"false\" values, while others allow the value to remain undefined.)\n2. Make sure the value is spelled correctly.\n3. Consider whether the attribute has a default value that must be modified in order to be valid in the current context.\n4. If the attribute references an ID, make sure the ID exists on the page.",
    "ValueStatement": "When assistive tech encounters an element with an invalid ARIA attribute value, it might ignore the attribute or respond to it in an unexpected way.\n \nAs a result, assistive tech users might find the element difficult or impossible to use.",
    "SuggestedCode": "The aria-checked attribute has a valid value of \"false\".\n \nAssistive tech can inform users that the radio button is currently unchecked.\n \n<div role=\"radio\" aria-checked=\"false\" tabindex=\"0\">Small</div>",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.4/aria-valid-attr-value\n https://accessibilityinsights.io/info-examples/web/aria-valid-attr-value/",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 22,
    "RuleID": "aria-valid-attr",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Invalid name: ARIA attribute",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "ARIA attributes starting with aria- must have valid names. Referring to a misspelled attribute or to one that does not exist will result in an invalid attribute and thus failure of this rule.",
    "Description (2) [accessiblity insights] Microsoft": "ARIA attributes must have valid names.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An ARIA attribute beginning with aria- has an invalid name. Misspelled or nonexistent attributes referenced will cause rule failure.",
    "Recommendation": "Action: Set a valid name for all ARIA attributes starting with aria-. \n \nHow to fix:\n1. Make sure you are using a correct and applicable attribute name.\n2. Make sure the attribute name is correctly spelled.",
    "ValueStatement": "When assistive tech encounters an element with an invalid ARIA attribute name beginning with aria-, it will ignore the attribute or the rule will fail.\n \nAs a result, assistive tech users will find the element difficult or impossible to use.",
    "SuggestedCode": "The toggle button must have a valid ARIA attribute name.\n \nAssistive tech can then inform users that the button is currently pressed.\n \n<a tabindex=\"0\" role=\"button\" id=\"toggle\" aria-pressed=\"true\">Mute</a>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/aria-valid-attr/\n https://dequeuniversity.com/rules/axe/4.4/aria-valid-attr",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 23,
    "RuleID": "audio-caption",
    "Level": "A",
    "Checkpoint": "1.2.1 Audio-only and video-only",
    "Category": "Audio and Video",
    "Summary": "Missing: captions track",
    "SuccessCriteria": "wcag121",
    "Description [Deque]": "The track element must be present for each HTML5 audio element, with kind=\"captions\" set as a property. Captions are text—synchronized with the audio file—of the dialog, narration, and any important auditory information, for the benefit of deaf users.",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "HTML5 audio elements are missing a track element with a property value of kind=\"captions\". This is an accessibility failure.",
    "Recommendation": "Action: Add a track element to all HTML5 audio elements.\n \nHow to fix:\n1. Make sure captions exist for the audio element.\n2. Add the track element.\n3. Set property kind=\"captions\".",
    "ValueStatement": "To be available for deaf users, as well as for many other users including those with language and auditory processing issues, audio and audio-video elements require captions.\n \nCaptions (definition): Typed or auto-generated text that equally conveys an audio or audio-video media element's dialogue, narration, and relevant audio information, e.g., the sound of breaking glass. Caption text must be synchronized with audio.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.5/audio-caption",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "DeafBlind\n Deaf",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 24,
    "RuleID": "autocomplete-valid",
    "Level": "AA",
    "Checkpoint": "1.3.5 Identify Input Purpose",
    "Category": "Forms and UI",
    "Summary": "Invalid autocomplete attribute",
    "SuccessCriteria": "wcag135",
    "Description [Deque]": "Ensure the autocomplete attribute is correct and suitable for the form field",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "The autocomplete attribute is missing, incorrect, or not suitable for the respective form field.",
    "Recommendation": "Action: Add a correct and appropriate autocomplete attribute to all relevant form fields.\n\nHow to fix:\n1. Set an autocomplete attribute for the form field.\n2. Make sure it is appropriate for the specific form field.",
    "ValueStatement": "The autocomplete attribute describes allowed values for input fields. This allows the browser to offer auto fill suggestions (e.g., first name).\n\nMissing or inappropriate autocomplete values in form fields are an accessibility failure: screen readers will not announce fields, and assistive tech users do not receive important information about field interaction, and cannot navigate forms correctly.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/autocomplete-valid?application=axeAPI",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 25,
    "RuleID": "avoid-inline-spacing",
    "Level": "AA",
    "Checkpoint": "1.4.12 Text spacing",
    "Category": "Structure",
    "Summary": "Inline text spacing not adjustable via custom stylesheets",
    "SuccessCriteria": "wcag1412",
    "Description [Deque]": "Ensure that text spacing set through style attributes can be adjusted with custom stylesheets",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "Inline text spacing set through style attributes is not adjustable via custom stylesheets. This is an accessibility failure.",
    "Recommendation": "Action: Make sure text spacing set through style attributes can be adjusted using custom stylesheets.\n\nHow to fix:\nExamine your styles. Make sure no !important style overrides are specified for the following:\n1. line-height\n2. letter-spacing\n3. word-spacing",
    "ValueStatement": "People with cognitive disabilities may find it difficult to track single-spaced blocks of text. With adjustable line spacing, it is easier for these users to visually read a new line after finishing the line before it.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/avoid-inline-spacing?application=axeAPI",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/text-spacing",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 26,
    "RuleID": "blink",
    "Level": "A",
    "Checkpoint": "2.2.2 Pause, stop, hide",
    "Category": "Dynamic content",
    "Summary": "Blinking/flashing elements in use",
    "SuccessCriteria": "wcag222",
    "Description [Deque]": "This rule requires that no blink elements are present. Flashing text can be difficult to read and blinking objects can be difficult to activate. The associated automated check finds the presence of all blink elements so that they can be removed.",
    "Description (2) [accessiblity insights] Microsoft": "The <blink> element is deprecated and must not be used.",
    "CSR": "Partial",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "The <blink> element is in use. This element is deprecated and should not be used for either text or objects, as they are difficult to read and activate.",
    "Recommendation": "Action: Be sure no <blink> elements are present.\n \nHow to fix:\n1. Remove any <blink> elements.\n2. Consider using <strong> or <em> elements to emphasize important text.",
    "ValueStatement": "Text that blinks (alternates between visible and invisible states) can be distracting, especially for people with cognitive disabilities. Blinking text can be difficult to read, especially for people with low vision or reading disabilities. And a blinking UI control can be difficult to activate, especially for people with limited dexterity.",
    "SuggestedCode": "The <blink> element can be replaced by a <strong> element. Browsers and assistive tech can then communicate to users that the content is important.\n \n <p>This item is <strong>New!</strong></p>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/blink/\n https://dequeuniversity.com/rules/axe/4.4/blink",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Low Vision\n Mobility\n Cognitive",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 27,
    "RuleID": "button-name",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: accessible name for button element",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Buttons must have discernible text that clearly describes the destination, purpose, function, or action for screen reader users.\n \n The input-button-name rule separates functionality from the button-name rule to ensure that input buttons have discernible text; advise relevant to input button names was incorrect for button elements.",
    "Description (2) [accessiblity insights] Microsoft": "All <button> elements must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "Yes",
    "Description3 [UserWay]": "A <button> element is missing an appropriate accessible name that clearly describes its destination, purpose, function, or action for screen reader and assistive tech users. This element is not accessible.",
    "Recommendation": "Action: For each <button> element, add an accessible name.\n \nHow to fix:\nUse one of the following methods:\n \nGood\n• title attribute\n \nBetter\n• aria-label attribute\n• aria-labelledby attribute referencing visible text\n \nBest\n• Inner text that is available to assistive technologies (not marked with display: none or aria-hidden=\"true\")",
    "ValueStatement": "Accessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.\n \nWhen a button has no accessible name, assistive tech users have no way to perceive its purpose.",
    "SuggestedCode": "Visible inner text gives the button an accessible name. Its purpose is then communicated to everyone\n \n <button id=\"find\"><img src=\"find.jpg>Find</button>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/button-name/\n https://dequeuniversity.com/rules/axe/4.4/button-name",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 28,
    "RuleID": "bypass",
    "Level": "A",
    "Checkpoint": "2.4.1 Bypass blocks",
    "Category": "Structure",
    "Summary": "Missing: bypass mechanism",
    "SuccessCriteria": "wcag241",
    "Description [Deque]": "Each page must have a main landmark to provide a mechanism to bypass repeated blocks of content or interface elements (like header and navigation) and quickly arrive at the main content.",
    "Description (2) [accessiblity insights] Microsoft": "Web pages must allow keyboard users to bypass repeated blocks of content.",
    "CSR": "No",
    "Widget Coverage": "Yes",
    "Description3 [UserWay]": "This page is missing a bypass mechanism. Without a bypass mechanism, so keyboard navigation and assistive tech users can skip repeated elements and content, a webpage cannot be considered accessible.",
    "Recommendation": "Action: Be sure to add headings, skip links, or landmarks to the page.\n \nHow to fix:\nUse one of the following methods:\n \nGood\n• Landmark regions:\n   A. Place all page content inside a landmark element.\n   B. Make sure each landmark accurately reflects the kind of content it contains.\n \nBetter\n • Headings: Provide hierarchical heading structures.\n \nBest\n • Skip link: Add a skip link.",
    "ValueStatement": "Users with low vision or readability issues find it tedious to navigate through large sections of content without a bypass mechanism.\n \nWeb pages typically begin with blocks of content that repeat across multiple pages, such as banners and site navigation menus. A sighted person using a mouse can visually skim past repeated content and access the primary content with a single click.\n \nPages should have correctly marked skip links, landmarks, and headings. These bypass mechanisms offer equivalent options for keyboard users to navigate directly to the page's main content.\n \nIf they do not, keyboard navigation and assistive tech users may lose track of content, or may go through repetitive and unnecessary content.",
    "SuggestedCode": "A skip link is added immediately after the page's <body> tag. Styling makes the skip link visible only when it has focus. Mouse users are unaware of it, but all keyboard users can take advantage of it. (Note that assistive tech users would still benefit from the addition of headings and landmarks.)\n \n …\n <html>\n <head>\n <style>\n body {background-color: powderblue; …\n #skip a {display: block; position: absolute; left: -999px; top: -999px;}\n #skip a:focus {left: 0; top: 0; padding: 6px; background: #fff; border:1px solid #990000;}\n </style>\n </head>\n <body>\n <div id=\"skip\">\n <a href=\"#content\">Skip to main content</a>\n </div>\n <div class=\"sitebanner\">…</div>\n <div class=\"menubar\">…</div>\n <div class=\"main\" id=\"content\">…",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/bypass/\n https://dequeuniversity.com/rules/axe/4.4/bypass",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 29,
    "RuleID": "color-contrast-enhanced",
    "Level": "AAA",
    "Checkpoint": "1.4.6 Contrast (Enhanced)",
    "Category": "",
    "Summary": "Insufficient contrast: text (AAA)",
    "SuccessCriteria": "wcag146",
    "Description [Deque]": "Ensures the contrast between foreground and background colors meets WCAG 2 AAA enhanced contrast ratio thresholds",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Partial",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "Text does not meet WCAG 2 AAA enhanced minimum contrast requirements against its background color.",
    "Recommendation": "Action: Regular text (text below 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 7:1 against its background. Large text (text above 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 4.5:1 against its background.\n\nHow to fix:\nFor regular text: Make sure its contrast ratio meets or exceeds 7:1.\nFor large text: Make sure its contrast ratio meets or exceeds 4.5:1.\n1. Use higher contrast, compliant colors for text and/or background.\n2. Always test and verify your color choices and contrast ratios with a contrast checker, such as the one at https://userway.org/contrast.",
    "ValueStatement": "Text that does not meet minimum contrast requirements may be difficult for some users to read and interpret.\n \nMost people find it easier to read text when it has a sufficiently high contrast against its background. People with mild visual disabilities, low vision, age-related presbyopia, or limited color perception are likely to find text unreadable when contrast is too low.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/color-contrast-enhanced?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "Low Vision\n Colorblindness",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 30,
    "RuleID": "color-contrast",
    "Level": "AA",
    "Checkpoint": "1.4.3 Contrast (Minimum) [contrast-minimum]",
    "Category": "",
    "Summary": "Insufficient contrast: text (AA)",
    "SuccessCriteria": "wcag143",
    "Description [Deque]": "All text elements must have sufficient contrast between text in the foreground and background colors behind it in accordance with WCAG 2 AA contrast ratio thresholds.",
    "Description (2) [accessiblity insights] Microsoft": "Text elements must have sufficient contrast against the background.",
    "CSR": "Partial",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "Text does not meet WCAG 2 AA minimum contrast requirements against its background color. This contrast failure applies even to text that is embedded in an image.",
    "Recommendation": "Action: Regular text (text below 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 4.5:1 against its background. Large text (text above 18 point / 24 pixel, or 14 point / 19 pixel, if bold) must have a color contrast ratio of at least 3:1 against its background.\n  \nHow to fix:\nFor regular text: Make sure its contrast ratio meets or exceeds 4.5:1.\nFor large text: Make sure its contrast ratio meets or exceeds 3:1.\n1. Use higher contrast, compliant colors for text and/or background.\n2. Always test and verify your color choices and contrast ratios with a contrast checker, such as the one at https://userway.org/contrast.",
    "ValueStatement": "Text that does not meet minimum contrast requirements may be difficult for some users to read and interpret.\n \nMost people find it easier to read text when it has a sufficiently high contrast against its background. People with mild visual disabilities, low vision, age-related presbyopia, or limited color perception are likely to find text unreadable when contrast is too low.",
    "SuggestedCode": "The font color specified below for <h1> elements provides a contrast of 3.762:1, which is sufficient for large text. Most people will find it legible.\n \n <style>\n …\n h1 {color: #ee22bb; font-size=48px}\n …\n </style>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/color-contrast/\n https://dequeuniversity.com/rules/axe/4.4/color-contrast",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Low Vision\n Colorblindness",
    "Level__1": "WCAG 2.1 (AA)",
    "BestPractice": ""
  },
  {
    "Sino": 31,
    "RuleID": "css-orientation-lock",
    "Level": "AA",
    "Checkpoint": "1.3.4 Orientation",
    "Category": "Structure",
    "Summary": "Locked orientation",
    "SuccessCriteria": "wcag134",
    "Description [Deque]": "Ensures content is not locked to any specific display orientation",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "Content must not be locked to a specific device orientation.",
    "Recommendation": "Action: Make sure content is not locked to any specific device orientation.\n\nHow to fix:\n• Make sure no techniques have been used to lock device orientation, including CSS.\n• Test content orientation for accessibility to all users in any orientation.",
    "ValueStatement": "Content that is locked to a single orientation may be not be accessible to assistive tech users.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/css-orientation-lock?application=axeAPI",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/orientation",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 32,
    "RuleID": "definition-list",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "Inappropriate definition list content",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "Definition lists (dl) must contain only properly-ordered dt and dd groups, div, script, or template elements.",
    "Description (2) [accessiblity insights] Microsoft": "A <dl> element must directly contain only properly ordered <dt> and <dd> groups, <script>, or <template> elements.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "This definition list contains inappropriate elements.\n\nA <dl> element (that is, a definition list) must directly contain only properly ordered <dt> and <dd> groups, <script>, or <template> elements.",
    "Recommendation": "Action: Make sure each <dl> element is properly structured:\n \nHow to fix:\nExamine and correct all definition lists:\n1. Each <dl> element must contain ONLY <dt>, <dd>, <script>, and <template> elements.\n2. Each <dl> element must contain one or more <dt> elements.\n3. Each <dt> element must contain one or more <dd> elements.",
    "ValueStatement": "Definition list (definition): A list of terms (words or phrases), and their definitions. A definition list can contain only certain element types, and it requires a specific parent/child structure.\n \nWhen assistive tech encounters a definition list that is poorly structured or contains invalid elements, it might respond in an unexpected way. As a result, assistive tech users might find it difficult to interpret the list.",
    "SuggestedCode": "Each <img> element is contained within a <dt> element. Assistive tech can now correctly present the structure of the definition list.\n \n <dl>\n <dt>Coffee\n <img src=\"coffee.JPG\" width=\"50\" height=\"50\" alt=\"A coffee shrub with large green leaves and small red berries\">\n </dt>\n <dd>A beverage prepared from the roasted seeds of various Coffea species.</dd>\n <dt>Tea\n <img src=\"Tea.jpg\" width=\"50\" height=\"50\" alt=\"A tea plant with small green leaves and white blossoms\">\n </dt>\n <dd>A beverage prepared from the cured leaves of Camellia sinensis.</dd>\n </dl>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/definition-list/\n https://dequeuniversity.com/rules/axe/4.4/definition-list",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 33,
    "RuleID": "dlitem",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "Inappropriate container for definition list",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "Definition list items (dt and/or dd) must be wrapped in parent dl elements to be valid. This enables screen reader users to understand the proper hierarchy of information in the list.",
    "Description (2) [accessiblity insights] Microsoft": "All <dt> and <dd> elements must be contained by a <dl> element.",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "These definition list items, e.g., <dt> and <dd> elements, are not contained by a parent <dl> element.",
    "Recommendation": "Action: Contain all definition list items in a parent definition list element.\n \nHow to fix:\nWrap all <dt> and <dd> elements within a parent <dl> element.",
    "ValueStatement": "Definition list (definition): A list of terms (words or phrases), and their definitions. A definition list requires a specific parent/child structure.\n \nWhen assistive tech encounters a definition list that is poorly structured, it might respond in an unexpected way. As a result, assistive tech users might find it difficult to interpret the list.",
    "SuggestedCode": "The terms and definitions are contained in a <dl> element. Assistive tech can now present the list correctly.\n \n <h3>Glossary</h3>\n <dl>\n <dt>Coffee</dt>\n <dd>A beverage prepared from the roasted seeds of various Coffea species.</dd>\n <dt>Tea</dt>\n <dd>A beverage prepared from the cured leaves of Camellia sinensis.</dd>\n </dl>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/dlitem/\n https://dequeuniversity.com/rules/axe/4.4/dlitem",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 34,
    "RuleID": "document-title",
    "Level": "A",
    "Checkpoint": "2.4.2 Page title",
    "Category": "Structure",
    "Summary": "Missing: page title",
    "SuccessCriteria": "wcag242",
    "Description [Deque]": "The value assigned to active ID attributes on focusable elements must be unique to prevent the second instance from being overlooked by assistive technology. Put another way, active ID attributes may not be used more than once on focusable elements in the same document; focusable active elements require unique IDs for assistive technology to distinguish one element from another.",
    "Description (2) [accessiblity insights] Microsoft": "A web page must contain a <title> element that describes its topic or purpose.",
    "CSR": "Partial",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "This page is missing its required <title> element, describing its topic, content, or purpose.",
    "Recommendation": "Action: Make sure that all pages have a page title, using the title tag.\n  \nHow to fix:\nInclude a non-empty <title> element in the <head> section.\n \nYour titles should:\n1. Accurately describe the page's content and purpose\n2. Be unique (no duplicate titles)\n3. Keep it simple and concise\n4. Use language familiar to the user (no jargon)\n5. Include the unique name first, overall site name last",
    "ValueStatement": "All pages require a unique, accessible page title.\n \nScreen readers announce the page title first: this offers assistive tech users a way to rapidly navigate content. The title is displayed in the browser tab and in search engine results. The most useful page title is descriptive and meaningful, giving a quick overview of the page's content or purpose.\n \nA descriptive page title helps everyone, especially assistive tech users, determine whether a page contains information relevant to their current needs.",
    "SuggestedCode": "The page's <head> section includes a descriptive <title> element. Everyone can rapidly assess whether the page contains relevant information.\n \n <head>\n <title>How to Contact My Company</title>\n <meta charset=\"UTF-8\">\n <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mycompany.com/StyleSheets/home\">\n </head>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/document-title/\n https://dequeuniversity.com/rules/axe/4.4/duplicate-id-active",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/page-titled",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 35,
    "RuleID": "duplicate-id-active",
    "Level": "A",
    "Checkpoint": "4.1.1 Parsing",
    "Category": "Structure",
    "Summary": "Duplicate ID on active element",
    "SuccessCriteria": "wcag411",
    "Description [Deque]": "The value assigned to active ID attributes on focusable elements must be unique to prevent the second instance from being overlooked by assistive technology. Put another way, active ID attributes may not be used more than once on focusable elements in the same document; focusable active elements require unique IDs for assistive technology to distinguish one element from another.",
    "Description (2) [accessiblity insights] Microsoft": "Active, focusable elements must have unique id values.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An active, focusable element has a duplicated ID, rather than the required unique ID value.",
    "Recommendation": "Action: Be sure to set a a unique ID value for each active, focusable element.\n \nHow to fix:\n1. Examine active ID attributes on focusable elements.\n2. Assign a new, unique ID value to any such element that previously had a duplicate ID.",
    "ValueStatement": "To functionally distinguish between active, focusable elements, each element must have its own unique identifier.\n \nWhen multiple active, focusable elements share the same ID attribute, both scripting (e.g., JavaScript) and assistive tech are likely to act only on the first and ignore the others. As a result, both functionality and accessibility can be degraded.\n \nFocusable element (definition): An element is focusable if it can receive input focus via scripting, mouse interaction, or keyboard tabbing.\n \nActive element (definition): It is active if it is not marked as disabled.",
    "SuggestedCode": "Each submit button has a unique id value. Scripting and assistive tech can now reliably treat them as separate entities.\n \n <form id=\"site-search\" role=\"search\">\n <p id=\"site-search-label\">Search this site</p>\n <input type=\"search\" id=\"site-search-field\" aria-labelledby=\"site-search-label\" size=\"50\">\n <input type=\"submit\" id=\"site-search-submit\" value=\"Search\">\n </form>\n …\n <form id=\"page-search\" role=\" search\">\n <p id=\"page-search-label\">Search this page</p>\n <input type=\"search\" id=\"page-search-field\" aria-labelledby=\"page-search-label\" size=\"50\">\n <input type=\"submit\" id=\"page-search-submit\" value=\"Search\">\n </form>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/duplicate-id-active/\n https://dequeuniversity.com/rules/axe/4.4/duplicate-id-active",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/parsing",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 36,
    "RuleID": "duplicate-id-aria",
    "Level": "A",
    "Checkpoint": "4.1.1 Parsing",
    "Category": "Structure",
    "Summary": "Duplicate ID on referenced element",
    "SuccessCriteria": "wcag411",
    "Description [Deque]": "The value assigned to an id attribute used in ARIA or in form labels must be unique to prevent the second instance from being overlooked by assistive technology. Put another way; ID values used in ARIA and in labels may not be used more than once in the same document to differentiate each element from another.",
    "Description (2) [accessiblity insights] Microsoft": "An element referenced by a label or ARIA attribute must have a unique id value.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An element referenced by a label or ARIA attribute has a duplicated ID, rather than the required unique ID value.",
    "Recommendation": "Action: Be sure to set a a unique ID value for each element referenced by a label or ARIA attribute.\n \nHow to fix:\n1. Examine ID attributes on referenced elements.\n2. Assign a new, unique ID value to any such element that previously had a duplicate ID.",
    "ValueStatement": "Labels and ARIA relationship attributes (e.g., aria-controls, aria-labelledby, and aria-owns) use unique ID values to identify specific UI components. \n \nTo functionally distinguish between referenced elements, each element must have its own unique identifier.\n \nWhen multiple elements in the same web page share the same ID attribute, assistive tech is likely to recognize only the first, and ignore others.",
    "SuggestedCode": "The <p> elements referenced by the aria-labelledby attributes have unique id values. Assistive tech can now report the correct label for each control.\n \n <form id=\"site-search\" role=\"search\">\n <p id=\"site-search-label\">Search this site</p>\n <input type=\"search\" id=\"site-search-field\" aria-labelledby=\"site-search-label\" size=\"50\">\n <input type=\"submit\" id=\"site-search-submit\" value=\"Search\">\n </form>\n …\n <form id=\"page-search\" role=\" search\">\n <p id=\"page-search-label\">Search this page</p>\n <input type=\"search\" id=\"page-search-field\" aria-labelledby=\"page-search-label\" size=\"50\">\n <input type=\"submit\" id=\"page-search-submit\" value=\"Search\">\n </form>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/duplicate-id-aria/\n https://dequeuniversity.com/rules/axe/4.4/duplicate-id-aria",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/parsing",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 37,
    "RuleID": "duplicate-id",
    "Level": "A",
    "Checkpoint": "4.1.1 Parsing",
    "Category": "Structure",
    "Summary": "Duplicate ID on static element",
    "SuccessCriteria": "wcag411",
    "Description [Deque]": "The value assigned to an ID attribute must be unique to prevent the second instance from being overlooked by assistive technology. Put another way; ID attributes may not be used more than once in the same document to differentiate each element from another.",
    "Description (2) [accessiblity insights] Microsoft": "Static elements must have unique id values.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "A static element has a duplicated ID value. This is not allowed.",
    "Recommendation": "Action: Be sure to set a a unique ID value for each element.\n \nHow to fix:\n1. Check elements for duplicate ID attributes.\n2. Assign a new, unique ID value to any element that previously had a duplicate ID.",
    "ValueStatement": "Duplicate ID values are a common, easily fixed validation error that can cause both scripting (e.g., JavaScript) and assistive tech to behave unexpectedly. Duplicate ID values can degrade both functionality and accessibility.",
    "SuggestedCode": "The elements have unique id values. Scripting and assistive tech can now reliably treat them as separate entities.\n \n <form id=\"site-search\" role=\"search\">\n <p id=\"site-search-label\">Search this site</p>\n …\n <form id=\"page-search\" role=\" search\">\n <p id=\"page-search-label\">Search this page</p>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/duplicate-id/\n https://dequeuniversity.com/rules/axe/4.4/duplicate-id",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/parsing",
    "WCAGURL": "",
    "Impact": "Minor",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 38,
    "RuleID": "empty-heading",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures headings have discernible text",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "Yes",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/empty-heading?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 39,
    "RuleID": "empty-table-header",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures table headers have discernible text",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/empty-table-header?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 40,
    "RuleID": "focus-order-semantics",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures elements in the focus order have a role appropriate for interactive content",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/focus-order-semantics?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 41,
    "RuleID": "form-field-multiple-labels",
    "Level": "A",
    "Checkpoint": "3.3.2 Labels or instructions",
    "Category": "Forms and UI",
    "Summary": "Redundant label on form field",
    "SuccessCriteria": "wcag332",
    "Description [Deque]": "Ensures form field does not have multiple labels.",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "The form field has more than one label. This is not allowed.",
    "Recommendation": "Action: Remove redundant or multiple labels from all form fields.\n \n How to fix:\n 1. Examine form field labels.\n 2. Choose the most relevant label; keep it.\n 3. Remove all other labels.",
    "ValueStatement": "Only one accessible label may be assigned to each form field.\n \n Multiple labels conflict, and may cause both scripting (e.g., JavaScript) and assistive tech to behave unexpectedly, degrading both functionality and accessibility.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.5/form-field-multiple-labels",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/on-input",
    "WCAGURL": "",
    "Impact": "Moderate",
    "DisabilitiesAffected": "Blind\n Low Vision\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 42,
    "RuleID": "frame-focusable-content",
    "Level": "A",
    "Checkpoint": "2.1.1 Keyboard",
    "Category": "Custom Controls, Forms and UI, Keyboard",
    "Summary": "Frame element with focusable content has negative tabindex",
    "SuccessCriteria": "wcag211",
    "Description [Deque]": "%lt;frame%gt; and %lt;iframe%gt; elements with focusable content must not have tabindex=\"-1\".",
    "Description (2) [accessiblity insights] Microsoft": "<frame> and <iframe> elements with a negative tabindex (e.g. tabindex=\"-1\") must not have focusable content.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "A <frame> or <iframe> element has both a negative tabindex (e.g., \"-1\") and focusable content. This is not allowed.",
    "Recommendation": "Action: Make sure that any focusable content does not also have a negative tabindex attribute.\n \nHow to fix:\nRemove the negative tabindex attribute from all <frame> and <iframe> elements that contain focusable content.",
    "ValueStatement": "<frame> and <iframe> elements with a negative tabindex are not keyboard focusable.\n\nIf there are interactive interface components inside these elements, keyboard-only navigators and assistive tech users, including people who are blind or have low vision, hand tremors, or other disabilities, will not be able to access those components.",
    "SuggestedCode": "The tabindex=\"-1\" attribute has been removed from the <iframe>. All users can now access the interactive elements inside the <iframe>.\n \n <iframe src=\"/interactive-form.html\">\n …\n \n </iframe>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/frame-focusable-content/\n https://dequeuniversity.com/rules/axe/4.4/frame-focusable-content",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 43,
    "RuleID": "frame-tested",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures <iframe> and <frame> elements contain the axe-core script",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/frame-tested?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 44,
    "RuleID": "frame-title-unique",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "Missing/unclear/duplicate frame title",
    "SuccessCriteria": "",
    "Description [Deque]": "All frame or iframe elements in the document must have a unique title to describe their contents to screen reader users.",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "A <frame> or <iframe> element does not have a unique accessible title that describes its contents for screen reader and assistive tech users.",
    "Recommendation": "Action: Make sure all <frame> and <iframe> elements have a title that is accessible, descriptive, meaningful, and unique.\n \nHow to fix:\nExamine the <frame> or <iframe> element. Does an accessible title exist?\n1. If the title does not exist, add it.\n2. If the title does exist, but is not accessible, make it accessible.\n3. If the title does exist, but is not unique, or not sufficiently descriptive, change it.\n \nUse ONE of the following methods:\n \nGood\n• title attribute\n \nBetter\n• aria-label attribute\n \nBest\n• aria-labelledby attribute",
    "ValueStatement": "A <frame> or <iframe> element without an accessible title, or whose title is not sufficiently descriptive, or whose title is not unique, will not convey meaningful information about their contents to screen reader and assistive tech users. For these users, such <frame> and <iframe> contents will be unknown or inaccessible.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.5/frame-title-unique",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 45,
    "RuleID": "frame-title",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing/empty frame title",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "All frame or iframe elements in the document must have a title that is not empty to describe their contents to screen reader users.",
    "Description (2) [accessiblity insights] Microsoft": "A <frame> or <iframe> element must have an accessible name.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "A <frame> and <iframe> element does not have an accessible title that describes its contents for screen reader and assistive tech users.",
    "Recommendation": "Action:\nFor each <frame> or <iframe> element, provide an accessible name/title. The name or title should be descriptive, meaningful, and unique.\n \nHow to fix:\nExamine the <frame> or <iframe> element. Does an accessible title exist?\n1. If the title does not exist, add it.\n2. If the title does exist, but is not accessible, make it accessible.\n3. If the title does exist, but is not unique, or not sufficiently descriptive, change it.\n \nUse ONE of the following methods:\n \nGood\n• title attribute\n \nBetter\n• aria-label attribute\n \nBest\n• aria-labelledby attribute",
    "ValueStatement": "A <frame> or <iframe> is used to embed one HTML document within another.\n \n Accessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.\n \n People with good vision can glance at a <frame> or <iframe> element to get a quick idea of its content. Assistive tech users require a frame to have an accessible name, so that they can determine whether it contains information relevant to their current needs.",
    "SuggestedCode": "The <iframe> has a title attribute that gives it an accessible name. Assistive tech users can judge from the name whether the frame is likely to have useful content.\n \n <iframe src=\"//articles/2019-11-14_new_characters.htm\" title=\"Introducing our new characters\" frameborder=\"0\" width=\"100%\" height=\"32px\" scrolling=\"no\" allowtransparency=\"true\">\n …\n </iframe>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/frame-title/\n https://dequeuniversity.com/rules/axe/4.4/frame-title",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 46,
    "RuleID": "heading-order",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures the order of headings is semantically correct",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/heading-order?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 47,
    "RuleID": "heading-content",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Hidden content on the page should be analyzed",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/hidden-content?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 48,
    "RuleID": "html-has-lang",
    "Level": "A",
    "Checkpoint": "3.1.1 Language of page",
    "Category": "Structure",
    "Summary": "Missing/invalid lang attribute",
    "SuccessCriteria": "wcag311",
    "Description [Deque]": "The HTML document element must contain a valid lang attribute or must correspond to a valid lang code for multilingual screen reader users who may prefer a language other than the default.",
    "Description (2) [accessiblity insights] Microsoft": "An <html> element must have a lang attribute.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "This HTML document element is missing a required valid lang attribute or lang code, which is needed for multilingual screen reader announcement with better language-specific vocalization accuracy.",
    "Recommendation": "Action: Determine and encode a primary language for the page.\n \nHow to fix:\n1. Identify the page's primary language.\n2. Choose the corresponding language code from the IANA Language Subtag Registry\n3. Add a lang attribute to the <html> element using the correct language tag for the value that represents the primary language of the page.\n4. If a lang attribute is already specified, make sure its value is spelled correctly.",
    "ValueStatement": "When a web page's primary language is programmatically identified, browsers and assistive tech can render the text more accurately; screen readers can use the correct pronunciation; visual browsers can display the correct characters; media players can show captions correctly; and automated translation is enabled.\n \nAll users find it easier to understand the page's content.",
    "SuggestedCode": "The <html> element below has a lang attribute. It correctly identifies the primary language of the page as Spanish. Screen reader users find the Spanish content easier to understand because it is pronounced correctly.\n \n <html lang=\"es\">",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/html-has-lang/\n https://dequeuniversity.com/rules/axe/4.4/html-has-lang",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Cognitive",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 49,
    "RuleID": "html-lang-valid",
    "Level": "A",
    "Checkpoint": "3.1.1 Language of page",
    "Category": "Structure",
    "Summary": "Invalid lang attribute",
    "SuccessCriteria": "wcag311",
    "Description [Deque]": "The HTML document must contain a valid lang attribute or must correspond to a valid lang code for multilingual screen reader users who may prefer a language other than the default.",
    "Description (2) [accessiblity insights] Microsoft": "The lang attribute of an <html> element must have a valid value.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "This HTML document element is missing a required lang attribute with a valid value, or a corresponding valid lang code. This is needed for multilingual screen reader announcement with better language-specific vocalization accuracy.",
    "Recommendation": "Action: Determine and encode a primary language for the page.\n \nHow to fix:\n1. Identify the page's primary language.\n2. Choose the corresponding language code from the IANA Language Subtag Registry\n3. Add a lang attribute to the <html> element using the correct language tag for the value that represents the primary language of the page.\n4. If a lang attribute is already specified, make sure its value is spelled correctly.",
    "ValueStatement": "When a web page's primary language is programmatically identified, browsers and assistive tech can render the text more accurately; screen readers can use the correct pronunciation; visual browsers can display the correct characters; media players can show captions correctly; and automated translation is enabled.\n \nAll users find it easier to understand the page's content.",
    "SuggestedCode": "The <html> element has the correct lang attribute. It correctly identifies the primary language of the page as Spanish. Screen reader users find the content easier to understand because it's pronounced correctly.\n \n <html lang=\"es\">",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/html-lang-valid/\n https://dequeuniversity.com/rules/axe/4.4/html-lang-valid",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Cognitive",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 50,
    "RuleID": "html-xml-lang-mismatch",
    "Level": "A",
    "Checkpoint": "3.1.1 Language of page",
    "Category": "Structure",
    "Summary": "Mismatched xml:lang and lang values",
    "SuccessCriteria": "wcag311",
    "Description [Deque]": "The HTML document must contain a valid lang attribute or must correspond to a valid lang code for multilingual screen reader users who may prefer a language other than the default. The xml:lang attribute value, if included on the html element, must duplicate the value of the lang exactly.",
    "Description (2) [accessiblity insights] Microsoft": "The lang and xml:lang attributes of an element must have the same value.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "In this HTML document, the xml:lang and lang values do not match exactly.\n \nHTML documents require a lang attribute with a valid value, or a corresponding valid lang code. This allows for multilingual screen reader announcement with better language-specific vocalization accuracy.",
    "Recommendation": "Action: Include both xml:lang and lang attributes, and make sure they match each other.\n \nHow to fix:\nFor XHTML 1.x pages, or multilingual pages served as text/html:\n1. Use both the lang attribute and the xml:lang attribute each time you specify the language.\n2. Be sure to provide identical values for both attributes.",
    "ValueStatement": "When a web page's primary language is programmatically identified, browsers and assistive tech can render the text more accurately; screen readers can use the correct pronunciation; visual browsers can display the correct characters; and media players can show captions correctly. All users find it easier to understand the page's content.\n \nAll HTML web pages must have a main lang attribute on the <html> element, as well as additional lang attributes on any elements with content in a different language. XHTML web pages and multilingual pages must also provide xml:lang attributes on those same elements.\n \nWhen a single element has both lang and xml:lang attributes, the two values must match exactly. When the two attributes have different values, the user experience is unpredictable.",
    "SuggestedCode": "Both the lang and xml:lang attributes correctly identify the page's primary language as Spanish. Screen reader users find the content easier to understand because it is pronounced correctly.\n \n <html lang=\"es\" xml:lang=\"es\">",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/html-xml-lang-mismatch/\n https://dequeuniversity.com/rules/axe/4.4/html-xml-lang-mismatch",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page",
    "WCAGURL": "",
    "Impact": "Moderate",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Cognitive",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 51,
    "RuleID": "identical-links-same-purpose",
    "Level": "AAA",
    "Checkpoint": "2.4.9: Link Purpose (Link Only)",
    "Category": "",
    "Summary": "Same name, different link purpose",
    "SuccessCriteria": "wcag249",
    "Description [Deque]": "Ensure that links with the same accessible name serve a similar purpose",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "Links with different purposes have the same accessible name. This is an accessibility failure.",
    "Recommendation": "Action: Change the accessible name to one that matches its purpose. Be sure to set identical links only when they describe the same purpose.\n\nHow to fix:\nUse the following to describe link purpose:\n• aria-label\n• link text\n• alt attribute",
    "ValueStatement": "To avoid user confusion, identical links must describe the same purpose, so that the user can identify the link among others on the page, and determine if they wish to follow the link.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/identical-links-same-purpose?application=axeAPI",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-link-only.html",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 52,
    "RuleID": "image-alt",
    "Level": "A",
    "Checkpoint": "1.1.1 Non-text content",
    "Category": "Content",
    "Summary": "Missing alt text: image",
    "SuccessCriteria": "wcag111",
    "Description [Deque]": "All images must have alternate text to convey their purpose and meaning to screen reader users.",
    "Description (2) [accessiblity insights] Microsoft": "An <img> element must have alternative text.",
    "CSR": "Partial",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "This image is missing required alt text. Without alt text, there is no way to equally convey the image meaning and intent to screen reader and assistive tech users.",
    "Recommendation": "Action: Add meaningful alt text if the image conveys useful information. Add a blank (null) alt text if the image should be ignored.\n \nHow to fix:\n1. Determine whether the image is meaningful or decorative:\n  a. IF an image conveys useful information that is NOT available through other page content, THEN it is meaningful.\n  b. IF an image could be removed from the page with no impact on meaning or function, THEN it is decorative.\n \n2. Add an alt attribute:\n  a. If the <img> element is decorative, add an empty (null) alt attribute ( alt=\"\" ).\n  b. If the <img> element is meaningful, provide descriptive alternative text using one of the following methods:\n \nGood\n• title attribute\n \nBetter\n• aria-label\n• aria-labelledby attribute\n \nBest\n• alt attribute",
    "ValueStatement": "Images and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech.\n \nMost assistive technology cannot currently interpret an image on its own. Therefore, alternative text must be added.\n \nIf an image has (non-empty) alternative text, the image is identified as meaningful, and its alternative text is presented to the user.\n \nIf an image has an empty alt attribute, the image is identified as decorative, and thus ignored.\n \nHowever, if an image has not been given alternative text, the image is presumed to be meaningful, and a screen reader may announce the image's file name and path instead. This fails to communicate the image's content.\n \nThe absence of alt tags is an accessibility violation.",
    "SuggestedCode": "An alt attribute should describe the image clearly, concisely, and in a way that equally conveys the most relevant information to assistive tech users.\n \n <img src=\"191121131947-28-oak-ed-strike-1121-large-tease.jpg\" alt=\"Teachers striking in front of the School District Headquarters\">",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/image-alt/\n https://dequeuniversity.com/rules/axe/4.4/image-alt",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 53,
    "RuleID": "image-redundant-alt",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensure image alternative is not repeated as text",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/image-redundant-alt?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 54,
    "RuleID": "input-button-name",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: accessible name on input button",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Ensures input buttons have discernible text.\n \n The input-button-name rule separates functionality from the button-name rule to ensure that input buttons have discernible text; advise relevant to input button names was incorrect for button elements.",
    "Description (2) [accessiblity insights] Microsoft": "Input buttons must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "This input button does not have an accessible name with discernible text. That is an accessibility failure.",
    "Recommendation": "Action: Add an accessible name for each input button.\n \nHow to fix:\nUse one of the following methods:\n \nGood\n• title attribute\n \nBetter\n• Non-empty value attribute\n• No value attribute (applies only if type is submit or reset; causes the type value to be reported as the accessible name)\n• aria-label attribute\n \nBest\n• aria-labelledby attribute",
    "ValueStatement": "Input button (definition): An <input> element with one of these types: button, reset, or submit.\n \nAccessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.\n \nWhen an input button has no accessible name, its specific purpose is not conveyed to assistive tech users.",
    "SuggestedCode": "When an aria-label attribute provides an accessible name for the input button, everyone can tell what the button does.\n \n<input type=\"button\" id=\"new-account\" aria-label=\"Create my account\" />",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/input-button-name/\n https://dequeuniversity.com/rules/axe/4.4/input-button-name",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 55,
    "RuleID": "input-image-alt",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: alt text on image button",
    "SuccessCriteria": "wcag111,wcag412",
    "Description [Deque]": "Ensures <input type=\"image\"> elements have alternate text.",
    "Description (2) [accessiblity insights] Microsoft": "Image buttons must have alternative text.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "This image button does not have alternative text. That is an accessibility failure.",
    "Recommendation": "Action: Add alternative text that describes the input button's purpose.\n \nHow to fix:\nUse one of the following methods:\n \nGood\n• title attribute\n \nBetter\n• aria-label attribute\n• aria-labelledby attribute\n \nBest\n• alt attribute",
    "ValueStatement": "Image button (definition): An <input> element with type=\"image\".\n \nAlternative text (definition): A word or phrase that is coded in such a way that assistive tech can associate it with a specific image, graphic, or visual object. Alt text equally conveys the information in the image, graphic, or visual object, including any relevant text that may appear.\n \nImages and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech.\n \nMost assistive technology cannot currently interpret an image on its own. Therefore, alternative text must be added to all images, and is required to communicate the image button's purpose.\n \nWhen an image button has no alternative text, people who use assistive tech have no way of knowing its purpose. This is an accessibility violation.",
    "SuggestedCode": "When an alt attribute describes the image button's purpose, everyone can tell what the button does.\n \n<input type=\"image\" src=\"envelope.png\" name=\"new\" alt=\"Create a new message\" height=\"50\" width=\"150\">",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/input-image-alt/\n https://dequeuniversity.com/rules/axe/4.4/input-image-alt",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 56,
    "RuleID": "label-content-name-mismatch",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "Missing/incomplete: visible text in accessible name",
    "SuccessCriteria": "wcag253",
    "Description [Deque]": "Ensures that elements labelled through their content must have their visible text as part of their accessible name",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "This element's accessible name is missing all or part of its visible text.",
    "Recommendation": "Action: Make sure the accessible name contains the text of the visible label in the correct order. Visible labels and accessible names do not have to match exactly.\n\nHow to fix:\n1. Examine the accessible name, e.g., aria-label.\n2. Add or adjust accessible name text so that it matches the visible label.",
    "ValueStatement": "This accessibility option is important for speech input users. If such a user says the visible text out loud, but the command is not recognized because the accessible/programmatic name does not match, that is an accessibility failure.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/label-content-name-mismatch?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 57,
    "RuleID": "label-title-only",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures that every form element has a visible label and is not solely labeled using hidden labels",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "Yes",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/label-title-only?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 58,
    "RuleID": "label",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: accessible name on form control",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Each form element must have a programmatically associated label element.",
    "Description (2) [accessiblity insights] Microsoft": "Form controls must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "This form control is missing a required accessible name.",
    "Recommendation": "Action: Add an accessible name for each <input> or <textarea> element.\n \nHow to fix:\nUse one of the following methods:\n \nGood\n• title attribute\n• placeholder attribute\n \nBetter\n• aria-label attribute\n• aria-labelledby attribute\n \nBest\n• Explicit <label> element\n• Implicit (wrapped) <label> element",
    "ValueStatement": "Form control (definition): An interactive HTML element used for user input. Form controls include buttons, checkboxes, text fields, color pickers, and more.\n \nAccessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type (role).\n \nWhen a form control has no accessible name, people who use assistive tech have no way of knowing its specific purpose.",
    "SuggestedCode": "An aria-labelledby attribute indicates to assistive tech that the <p> element serves as a label for the <textarea> element. The purpose of the <textarea> is now communicated to all users.\n \n <label for=\"ship-instr\">Shipping instructions:</label>\n <textarea rows=\"4\" cols=\"50\" id=\"ship-instr\"></textarea>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/label/\n https://dequeuniversity.com/rules/axe/4.4/label",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n Low Vision\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 59,
    "RuleID": "landmark-banner-is-top-level",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures the complementary landmark or aside is at top level",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/landmark-banner-is-top-level?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 60,
    "RuleID": "landmark-complementary-is-top-level",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures the complementary landmark or aside is at top level",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/landmark-complementary-is-top-level?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 61,
    "RuleID": "landmark-contentinfo-is-top-level",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures the contentinfo landmark is at top level",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/landmark-contentinfo-is-top-level?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 62,
    "RuleID": "landmark-main-is-top-level",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures the main landmark is at top level",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/landmark-main-is-top-level?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 63,
    "RuleID": "landmark-no-duplicate-banner",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures the document has at most one banner landmark",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/landmark-no-duplicate-banner?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 64,
    "RuleID": "landmark-no-duplicate-contentinfo",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures the document has at most one contentinfo landmark",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/landmark-no-duplicate-contentinfo?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 65,
    "RuleID": "landmark-no-duplicate-main",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures the document has at most one main landmark",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/landmark-no-duplicate-main?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 66,
    "RuleID": "landmark-one-main",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures the document has a main landmark",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/landmark-one-main?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 67,
    "RuleID": "landmark-unique",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Landmarks should have a unique role or role/label/title (i.e. accessible name) combination",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/landmark-unique?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 68,
    "RuleID": "link-in-text-block",
    "Level": "A",
    "Checkpoint": "1.4.1 Use of color",
    "Category": "Color",
    "Summary": "Link identified by color only",
    "SuccessCriteria": "wcag141",
    "Description [Deque]": "Ensures users who cannot distinguish between colors can tell when text is a link by verifying the link has either a distinct style that does not rely on color or has a contrast difference of greater than 3:1 (which alerts you that manual testing is required).",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Partial",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "Link is not distinguished from plain text in a way that does not rely on color alone.",
    "Recommendation": "Action: Be sure to distinguish links by methods other than color alone.\n  \nHow to fix:\n1. Add an additional visual cue on hover, such as an underline, or a change in font style.\n2. Or, increase font size for links.\n \n3. Do NOT use color alone to identify links; see above. However, if color is ONE of the methods distinguishing links, make sure to use a color that contrasts sufficiently both with its background, and with its surrounding text, so that it can be easily discerned by users who are partly or wholly color-blind.",
    "ValueStatement": "Link text cannot be identified by color alone.\n \nLink text must have additional visual cues on hover, for example, an underline, or a change in font style, e.g., bold or italics. Or, increase font size for links where color alone is used to identify them.\n \nAny color used as an additional visual identifier of a link must have sufficiently high contrast with its background and surrounding text.\n \nIf a user has low vision, or is partly or wholly color blind, the color will not be accessible for them, and the link will not be identifiable as such.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.5/link-in-text-block",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/use-of-color",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Low Vision\n Colorblindness",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 69,
    "RuleID": "link-name",
    "Level": "A",
    "Checkpoint": "2.4.4 Link purpose (in context)",
    "Category": "",
    "Summary": "Missing: accessible name for link",
    "SuccessCriteria": "wcag412,wcag244",
    "Description [Deque]": "Link text and alternate text for images, when used as links, must be discernible by a screen reader, must not have a duplicate label, and must be focusable.",
    "Description (2) [accessiblity insights] Microsoft": "Links must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "This link is missing an accessible name, or is not available to assistive tech. Both text link and image link alt text need to be focusable and available to screen readers and assistive tech. Links should not have a repeated label.",
    "Recommendation": "Action: Add an accessible name for each link that concisely describes its unique purpose.\n \nHow to fix:\nUse one of the following methods:\n \nGood\n• aria-label attribute\n \nBetter\n• aria-labelledby attribute\n \nBest\n• Link text that is available to assistive tech (not marked with display: none or aria-hidden=\"true\")",
    "ValueStatement": "Accessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.\n \nIf a link has no accessible name, people who use assistive tech have no way of knowing its purpose.",
    "SuggestedCode": "An aria-label attribute provides an accessible name that describes the link's purpose. Everyone can now tell what the link does.\n \n<a href=\"https://mycompany.com/coffee.htm\"><img src=\"//4/45/coffee.jpg\" height=\"25\" width=\"25\" aria-label=\"Browse our coffee products\"></a",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/link-name/\n https://dequeuniversity.com/rules/axe/4.4/link-name",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 70,
    "RuleID": "list",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "Incorrect list markup: child",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "Lists must be marked up correctly, meaning they must not contain content elements other than li elements.",
    "Description (2) [accessiblity insights] Microsoft": "A <ul>, <ol> or <menu> element must directly contain only <li> , <script> or <template> elements.",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "This list does not have correct list markup / hierarchy.\n\nParent list elements, e.g., <ul>, <ol>, or <menu>, may ONLY directly contain the following child elements: <li>, <script>, or <template>.",
    "Recommendation": "Action: Correct all list markup errors.\n \nHow to fix:\nFor each list element (<ol>, <ul> or <menu>), ordered or unordered:\n \n1. Make sure all list content is contained within <li> elements.\n2. Do not use a role attribute to override the native semantics of a <li> element.\n3. If you include any other HTML elements, enclose them within <li> elements.",
    "ValueStatement": "In a properly structured list, all content is contained within list items. Content can include text and other HTML elements. Certain non-content elements are also allowed.\n \nWhen assistive tech encounters a list that is poorly structured or contains disallowed elements, it might respond in an unexpected way. As a result, assistive tech users might find it difficult to interpret the list.",
    "SuggestedCode": "The <li> element retains its native role. The heading content is enclosed in an <h3> element, which is in turn enclosed within the <li>. Thus, all content within the list is contained within <li> elements. Assistive tech can now interpret the list consistently.\n \n <h2>Beverages</h2>\n <ul>\n <li><h3>Included</h3></li>\n <ul>\n <li>Coffee</li>\n <li>Tea</li>\n <li>Soda</li>\n </ul>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/list/ \n https://dequeuniversity.com/rules/axe/4.4/list",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 71,
    "RuleID": "listitem",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "Incorrect list markup: parent",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "All list items (li) must be contained within ul or ol parent elements.",
    "Description (2) [accessiblity insights] Microsoft": "All <li> elements must be contained by a <ul>, <ol>, or <menu> parent element.",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "This list does not have correct list markup / hierarchy.\n \nAll <li> list items must be contained by the following parent list elements: <ul>, <ol>, or <menu>",
    "Recommendation": "Action: Set all <li> elements inside a containing <ul>, <ol>, or <menu> parent element.\n \nHow to fix:\nFor each <li> list item:\n \n1. Enclose the <li> element in a <ul> or <ol> element (or in a parent element with role=\"list\" ).\n2. Do not use a role attribute to override the native semantics of the <ul> or <ol> element.",
    "ValueStatement": "In a properly structured list, all <li> list items are contained by a parent element: <ul>, <ol>, or <menu>.\n \nWhen assistive tech encounters a list that is poorly structured or contains disallowed elements, it might respond in an unexpected way. As a result, assistive tech users might find it difficult to interpret the list.",
    "SuggestedCode": "The list items are contained in a <ul> element. Assistive tech can now interpret the list consistently.\n \n <h2>Beverages</h2>\n <ul>\n <li>Coffee</li>\n <li>Tea</li>\n <li>Soda</li>\n </ul>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/listitem/\n https://dequeuniversity.com/rules/axe/4.4/listitem",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n Deaf\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 72,
    "RuleID": "marquee",
    "Level": "A",
    "Checkpoint": "2.2.2 Pause, stop, hide",
    "Category": "Dynamic content",
    "Summary": "Deprecated: marquee",
    "SuccessCriteria": "wcag222",
    "Description [Deque]": "<marquee> elements must not be present because they are deprecated, increase difficulty for users with limited dexterity, and are distracting for users with cognitive or attention deficits.",
    "Description (2) [accessiblity insights] Microsoft": "The <marquee> element is deprecated and must not be used.",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "The deprecated <marquee> element is in use. This is not allowed.",
    "Recommendation": "Action: Remove <marquee> elements.\n \nHow to fix:\n1. Remove any existing <marquee> code, or any similar code structure.\n2. Be sure to avoid coding text in any way that would cause it to move across the screen.",
    "ValueStatement": "A <marquee> element was often used in the past to display text that moves horizontally or vertically across the screen. This is now considered an accessibility violation.\n \nMoving text is distracting, especially for people with attention deficits or cognitive disabilities. Moving text can also be difficult to read, especially for people with low vision or reading disabilities. And, any UI control that moves can be difficult to activate, especially for people with limited dexterity.",
    "SuggestedCode": "The <marquee> element has been replaced with a static element. Styling (not shown) is used instead, to make the text visually prominent.\n \n \n <body>\n <p>Last day to order is tomorrow!</p>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/marquee/\n https://dequeuniversity.com/rules/axe/4.4/marquee",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Low Vision\n Mobility\n Cognitive",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 73,
    "RuleID": "meta-refresh-no-exceptions",
    "Level": "AAA",
    "Checkpoint": "2.2.4 Interruptions",
    "Category": "",
    "Summary": "Illicit refresh attribute in meta element",
    "SuccessCriteria": "wcag224,wcag325",
    "Description [Deque]": "Ensures <meta http-equiv=\"refresh\"> is not used for delayed refresh",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "The <meta http-equiv=\"refresh\"> element is in use for delayed refresh. This is not allowed.",
    "Recommendation": "Action: Remove the refresh attribute from the meta element.\n\nHow to fix:\n1. Remove http-equiv=\"refresh\" from all meta elements.\n2. IF a page refresh is required, then:\n  2a. It should be set up via JavaScript.\n  2b. Users must be given added options to:\n         • Pause refresh\n         • Extend refresh intervals\n         • Turn off refresh option",
    "ValueStatement": "An unexpected page refresh is disorienting and frustrating to users, especially assistive tech users. A page refresh also moves focus back to the top of the page, adding to the confusion, and causing problems for screen readers.",
    "SuggestedCode": "Scripting should be used to update specific content, rather than refreshing the entire page. Users must be given the option of updating manually rather than automatically. Everyone will then find the page easier to use.",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/meta-refresh-no-exceptions?application=axeAPI",
    "ReferencesW3C": "https://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-postponed.html",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 74,
    "RuleID": "meta-refresh",
    "Level": "A, AA",
    "Checkpoint": "2.2.1 Timing adjustable",
    "Category": "Dynamic content",
    "Summary": "Illicit refresh attribute in meta element",
    "SuccessCriteria": "wcag221",
    "Description [Deque]": "The document must not use <meta http-equiv=\"refresh\"> because it can prevent control over when the refresh occurs for users with disabilities.",
    "Description (2) [accessiblity insights] Microsoft": "A <meta> element must not have an http-equiv=\"refresh\" attribute.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "The http-equiv=\"refresh\" attribute is in use on a <meta> element. This is not allowed, as it can override refresh timing that is better suited to users.",
    "Recommendation": "Action: Remove http-equiv=\"refresh\" from all <meta> elements.\n \nHow to fix:\nIf a page refresh is required:\n \n1. Implement the refresh using a script.\n2. AND, offer a mechanism for users to turn off, extend, or adjust the timing of the page refresh.",
    "ValueStatement": "Using http-equiv=\"refresh\" in a <meta> element causes a web page to refresh automatically at a specified time interval.\n \nAn automatic page refresh can be disorienting. If a refresh causes input focus to move unexpectedly back to its original state, it can be especially frustrating for keyboard navigators, and screen reader and assistive tech users.",
    "SuggestedCode": "Scripting should be used to update specific content, rather than refreshing the entire page. Users must be given the option of updating manually rather than automatically. Everyone will then find the page easier to use.",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/meta-refresh/\n https://dequeuniversity.com/rules/axe/4.4/meta-refresh",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 75,
    "RuleID": "meta-viewport-large",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures <meta name=\"viewport\"> can scale a significant amount",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/meta-viewport-large?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 76,
    "RuleID": "meta-viewport",
    "Level": "AA",
    "Checkpoint": "1.4.4 Resize text",
    "Category": "Font size, Structure",
    "Summary": "Disabled: content zoom",
    "SuccessCriteria": "wcag144",
    "Description [Deque]": "",
    "Description (2) [accessiblity insights] Microsoft": "Not Present",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "Content zooming or scalability should not be disabled in <meta> elements.",
    "Recommendation": "Action: Make sure content zooming is not disabled.\n \nHow to fix:\n1. Remove content=\"user-scalable=no\" from all <meta> elements: check the <meta name=\"viewport\">'s content attribute.\n2. Make sure the \"maximum-scale\" is set to 2 or greater.",
    "ValueStatement": "In a <meta name=\"viewport\"> element, using content=\"user-scalable=no\" disables zooming in some browsers. Users are then forced to view the text at the specified size.\n \nMost people find it easier to read text when it is sufficiently large. People with visual disabilities, low vision, or limited color perception are likely to find text unreadable when it is small.",
    "SuggestedCode": "The <meta> element is reconfigured:\n1. The width of the page is set to match the screen width of the device.\n2. The initial zoom level of the page is set.\n \nEveryone can now zoom the text to a readable size that is comfortable for them, and the content stays within the viewport.\n \n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/meta-viewport/\nhttps://dequeuniversity.com/rules/axe/4.4/meta-viewport",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/resize-text",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 77,
    "RuleID": "nested-interactive",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Inaccessible: nested controls",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Nested interactive controls are not announced by screen readers",
    "Description (2) [accessiblity insights] Microsoft": "Interactive controls must not have focusable descendants.",
    "CSR": "Yes",
    "Widget Coverage": "NA",
    "Description3 [UserWay]": "These interactive controls have focusable child elements. This type of nesting hides internal control elements from screen readers and assistive tech, and is a serious accessibility blocker.",
    "Recommendation": "Action: Make sure interactive controls do not have focusable descendants.\n \nHow to fix:\n1. Separate nested interactive components.\n2. Or, style a single element.",
    "ValueStatement": "Certain interactive controls (e.g., button, checkbox, img, scrollbar or slider) cannot have interactive child elements. \n \nAssistive tech, such as a screen reader, is likely to ignore or respond unexpectedly to such nested controls.",
    "SuggestedCode": "The link is now outside the button. All users can now interact with the button and the link.\n \n<div role =\"button\">Download</div>\n <a href=foo.bar>Learn more about your download</a>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/nested-interactive/ \n https://dequeuniversity.com/rules/axe/4.4/nested-interactive",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 78,
    "RuleID": "no-autoplay-audio",
    "Level": "A",
    "Checkpoint": "1.4.2 Audio control",
    "Category": "Audio and Video",
    "Summary": "Autoplay video/audio",
    "SuccessCriteria": "wcag142",
    "Description [Deque]": "Ensures <video> or <audio> elements do not autoplay audio for more than three seconds without a control mechanism to stop or mute the audio.",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "These audio or video elements are set to play automatically, without user trigger. Audio elements must not autoplay for more than 3 seconds without an available mechanism to stop or mute the sound. This applies to both <audio> and <video> elements.",
    "Recommendation": "Action: Make sure audio or video does not autoplay for more than 3 seconds without offering users an opportunity to stop or mute the sound.\n \nHow to fix:\nUse one of the following solutions:\n1. Whenever possible, play audio or video only on user request.\n2. Stop autoplaying audio automatically after 3 seconds.\n3. Add an accessible control mechanism to <audio> and <video> elements, so that users can stop or mute the sound. This control should not affect the overall system volume.",
    "ValueStatement": "Users who are blind or have low vision find it difficult to hear the screen reader's speech output if an automatic audio is played at the same time.\n \nIn addition, audio content that plays automatically can make it difficult for a screen reader user to find a mechanism for controlling the audio.\n \nAn accessible mechanism must be offered, so that users can stop, pause, mute, or adjust the volume of all audio elements.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.5/no-autoplay-audio",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/audio-control",
    "WCAGURL": "",
    "Impact": "Moderate",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Cognitive",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 79,
    "RuleID": "object-alt",
    "Level": "A",
    "Checkpoint": "1.1.1 Non-text content",
    "Category": "Content",
    "Summary": "Missing: alt text on object",
    "SuccessCriteria": "wcag111",
    "Description [Deque]": "All embedded objects must have text alternatives to be read out to screen reader users.",
    "Description (2) [accessiblity insights] Microsoft": "An <object> element must have alternative text.",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An embedded <object> element is missing required accessible alternative text.",
    "Recommendation": "Action: Add alternative text for each <object> element.\n \nHow to fix:\nUse one of the following methods:\n \nGood\n• title attribute, or inner text\n \nBetter\n• aria-label attribute\n \nBest\n• aria-labelledby attribute",
    "ValueStatement": "An <object> element is used to embed multimedia content in a web page. It can also be used to embed one web page inside another.\n \nAlternative text (definition): A word or phrase that is coded in such a way that assistive tech can associate it with a specific image, graphic, or visual object. Alt text equally conveys the information in the image, graphic, or visual object, including any relevant text that may appear.\n \nMost assistive technology cannot currently interpret an image on its own. Therefore, alternative text must be added, to convey the image meaning to assistive tech users.",
    "SuggestedCode": "The <object> element uses an aria-label attribute to provide alternative text. Assistive tech users can now judge from the name whether the object is likely to have content that is useful for them.\n \n \n<object type=\"application/pdf\" data=\"/media/beeth_fe.pdf\" width=\"250\" height=\"200\" aria-label=\"Sheet music for Beethoven's \"Für Elise\">\n </object>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/object-alt/\n https://dequeuniversity.com/rules/axe/4.4/object-alt",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 80,
    "RuleID": "p-as-heading",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "Heading styled with <p>",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "Ensure bold, italic text and font-size is not used to style <p> elements as a heading",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "This heading is styled using the <p> paragraph element, rather than heading levels such as <h1>, <h2>, etc. This can cause confusion in navigation for screen reader users, who expect a logical, hierarchical order in page markup.",
    "Recommendation": "Action: Use heading levels rather than paragraph styles.\n\nHow to fix:\n1. Remove any styles applied to <p> elements, e.g., bold, italic, or font-size.\n2. Use <h1>, <h2>, <h3> levels through to <h6> to indicate logically ordered headings.\n3. Style headings appropriately, according to their levels.\n4. Do not overuse headings.",
    "ValueStatement": "Heading elements compose the framework of a document. They should be set in a logical hierarchy, not used to create visual design. Screen reader and assistive tech users should be able to understand the page structure by skimming quickly using headings.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/p-as-heading?application=axeAPI",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 81,
    "RuleID": "page-has-heading-one",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensure that the page, or at least one of its frames contains a level-one heading",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/page-has-heading-one?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 82,
    "RuleID": "presentation-role-conflict",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "Hidden element exposed: role conflict",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures elements which are marked to be removed from the accessibility tree are in fact removed.",
    "Description (2) [accessiblity insights] Microsoft": "Elements with role=\"none\" or role=\"presentation\" must not conflict with other roles.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An element intended to be removed from the accessibility tree has conflicting roles that cause it to be exposed to assistive tech.",
    "Recommendation": "Action: Make sure elements that are not intended to be exposed to assistive tech do not have a conflicting role that will expose them.\n \nHow to fix:\nFor any element with role=\"none\" or role=\"presentation\":\n1. Make sure it does not have a global ARIA attribute.\n2. Make sure it is not focusable.",
    "ValueStatement": "An ARIA role attribute can be added to an element to instruct assistive tech to treat the element as something other than its native HTML element type. For example, an <a> element with role=\"button\" is to be treated as a button, not a link.\n \nAssistive tech should announce an element's role only when the role is semantic (has inherent meaning). For example, users should be informed when they encounter links, buttons, or images, but not when they encounter elements such as <span>, <div>, or <p> elements. These elements are considered semantically neutral: that is, their role is not relevant for purposes of user interaction.\n \nThe role=”presentation” or role=”none” attributes instruct assistive tech to disregard the element's implicit role without hiding its content from users. There is no reason to announce a role, such as <p>, that has no effect on user interaction with the content.\n \nHowever, in some cases, when conflicting roles set elsewhere interfere, the semantic role of an element with role=\"none\" or role=\"presentation\" does not hide the element role from assistive tech users, who are then able to interact with the element. This may confuse or disorient users.",
    "SuggestedCode": "The element <a> has an empty aria-attribute of <aria-label> in addition to the <role=presentation>. This removes it from the accessibility tree and prevents a conflict between the global aria attribute and the <role=presentation>.\n \n <a href=\"https://ThisIsATestSite.com\" aria-label=\"\" role=\"presentation\">",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/presentation-role-conflict/\n https://dequeuniversity.com/rules/axe/4.4/presentation-role-conflict",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "Minor",
    "DisabilitiesAffected": "Blind\n Low Vision\n Mobility",
    "Level__1": "Best Practice of the Organization",
    "BestPractice": "yes"
  },
  {
    "Sino": 83,
    "RuleID": "region",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures all page content is contained by landmarks",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/region?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 84,
    "RuleID": "role-img-alt",
    "Level": "A",
    "Checkpoint": "1.1.1 Non-text content",
    "Category": "Content",
    "Summary": "Missing: alt text on img",
    "SuccessCriteria": "wcag111",
    "Description [Deque]": "Ensures elements marked role=\"img\" elements have alternate text.",
    "Description (2) [accessiblity insights] Microsoft": "Elements with role=\"img\" must have alternative text.",
    "CSR": "Yes",
    "Widget Coverage": "Yes",
    "Description3 [UserWay]": "An element with role=\"img\" is missing a required alternative text.",
    "Recommendation": "Action: Add alternative text for each element with role=\"img\":\n \nHow to fix:\n1. Determine whether the image as a whole is meaningful or decorative:\n  1a. An image is meaningful if it conveys information that is not available through other page content.\n  1b. An image is decorative if it could be removed from the page with no impact on meaning or function.\n2. If the image is meaningful:\n  2a. Add concise alt text that conveys the image meaning using one of the following attributes:\n  • aria-label\n  • aria-labelledby\n  • title\n  2b. Observe the image. Does it include visible text? If yes, be sure to include any visible text in the alt text.\n3. If the image is decorative, replace role=\"img\" with role=\"presentation\" or role=\"none",
    "ValueStatement": "Image button (definition): An <input> element with type=\"image\".\n \nAlternative text (definition): A word or phrase that is coded in such a way that assistive tech can associate it with a specific image, graphic, or visual object. Alt text equally conveys the information in the image, graphic, or visual object, including any relevant text that may appear.\n \nImages and graphic content observable by sighted users should be equally communicated with clear, meaningful, and descriptive alternative text (alt tags) to visually impaired visitors using screen readers and assistive tech.\n \nMost assistive technology cannot currently interpret an image on its own. Therefore, alternative text must be added to all images, and is required to communicate the image button's purpose.\n \nWhen an image button has no alternative text, people who use assistive tech have no way of knowing its purpose. This is an accessibility violation.",
    "SuggestedCode": "An aria-label attribute allows assistive tech to describe the image to users.\n \n \n <div role=\"img\" aria-label=\"scared face\">(ㆆ _ ㆆ)</div>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/role-img-alt/\n https://dequeuniversity.com/rules/axe/4.4/role-img-alt",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 85,
    "RuleID": "scope-attr-valid",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures the scope attribute is used correctly on tables",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "NA",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/scope-attr-valid?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 86,
    "RuleID": "scrollable-region-focusable",
    "Level": "A",
    "Checkpoint": "2.1.1 Keyboard",
    "Category": "Custom Controls, Forms and UI and content",
    "Summary": "Inaccessible scrollable content",
    "SuccessCriteria": "wcag211",
    "Description [Deque]": "Elements that have scrollable content should be accessible by keyboard",
    "Description (2) [accessiblity insights] Microsoft": "Elements with scrollable content must be accessible by keyboard.",
    "CSR": "Yes",
    "Widget Coverage": "Yes",
    "Description3 [UserWay]": "An element that includes scrollable content is not accessible via keyboard.",
    "Recommendation": "Action: Make sure scrollable content in an element is accessible via keyboard.\n \nHow to fix:\nFor each element with the overflow property set to auto or scroll, make sure the element itself is focusable or contains a focusable element.\n \nSome scrollable elements (such as <input type=\"text\"> are natively focusable.\nElements that are not natively focusable (such as <div> elements) can be made focusable by adding the attribute tabindex=\"0\".",
    "ValueStatement": "When a page includes content in a scrollable element, all users must be able to scroll any hidden content into view.\n \nMouse users can scroll such content by clicking the scrollbar associated with the scrollable element.\n \nHowever, it is not possible to activate a scrollbar via keyboard, because a scrollbar cannot receive input focus.\n \nInstead, focus must be moved either to the scrollable element itself, or to a child element within the scrollable element. Then the content can be scrolled using the arrow keys.\n \nThus, scrollable content is keyboard accessible only if the scrollable element is focusable or contains a focusable element. Focusable element (definition): An element that can receive input focus via scripting, mousing, or keyboard tabbing.",
    "SuggestedCode": "The attribute tabindex=\"0\" makes the <div> tabbable. Keyboard users can tab to the <div> and then operate the scrollbar by using arrow keys.\n \n \n <h3>Severability</h3>\n <div style=\"height: 50px; overflow: auto;\" tabindex=\"0\">If any provision of these terms is found to be unenforceable or invalid under any applicable law, such unenforceability or invalidity shall not render these terms unenforceable or invalid as a whole, and such provisions shall be deleted without affecting the remaining provisions herein.</div>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/scrollable-region-focusable/\n https://dequeuniversity.com/rules/axe/4.4/scrollable-region-focusable",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard",
    "WCAGURL": "",
    "Impact": "Moderate",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 87,
    "RuleID": "select-name",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Missing: associated name on select",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Each select element must have a programmatically associated label element.",
    "Description (2) [accessiblity insights] Microsoft": "All <select> elements must have accessible names.",
    "CSR": "Yes",
    "Widget Coverage": "Yes",
    "Description3 [UserWay]": "A <select> elements is missing a required programatically associated accessible name.",
    "Recommendation": "Action: Add an accessible name for each <select> element.\n \nHow to fix:\nUse one of the following methods:\n \nGood\n • title attribute\n \nBetter\n • aria-label attribute\n • aria-labelledby attribute referencing visible text\n \nBest\n • Explicit <label> element\n • Implicit (wrapped) <label> element",
    "ValueStatement": "A <select> element is an HTML control for selecting among a set of options.\n \nAccessible name (definition): A word or phrase coded such that assistive tech can associate it with a specific user interface object. Assistive tech can then refer to the object by name, not just by type.\n \nWhen a <select> element has no accessible name, its purpose is not conveyed to assistive tech users.",
    "SuggestedCode": "The <select> element is given an accessible name using a <label> element. All users can now understand that the control allows them to select a flavor.\n \n <label for=\"flavor\">Flavor:</label>\n <select id=\"flavor\" name=\"flavor\" required>\n <option value=\"0\">Apple</option>\n <option value=\"1\">Cherry</option>\n <option value=\"2\">Grape</option>\n <option value=\"3\">Lemon</option>\n <option value=\"4\">Watermelon</option>\n </select>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/select-name/\n https://dequeuniversity.com/rules/axe/4.4/select-name",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Blind\n Low Vision\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 88,
    "RuleID": "server-side-image-map",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "Custom Controls, Forms and UI",
    "Summary": "Server-side image map",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "The document contains an image map that is server-side instead of client-side.",
    "Description (2) [accessiblity insights] Microsoft": "Server-side image maps must not be used.",
    "CSR": "NA",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "Server-side image map in use. This is not allowed.",
    "Recommendation": "Action: Replace server-side image maps with client-side image maps.\n \nHow to fix:\n1. Find server-side image maps: <img ismap> elements.\n2. Replace them with client-side image maps: <img usemap> elements.",
    "ValueStatement": "Server-side image maps work by passing mouse click coordinates to a server-side script, which then determines what was clicked.\n \nBecause server-side image maps require the use of a mouse, they are not accessible to people who use keyboards (including people who use screen readers) or speech commands.",
    "SuggestedCode": "A client-side image map allows users to select a business location using a mouse, a keyboard, or a speech command.\n \n <p>Select a business location to see our business hours:</p>\n <img src=\"locations.png\" width=\"800\" height=\"400\" alt=\"Map of business locations\" usemap=\"#locations-map\">\n <map name=\"locations-map\">\n <area shape=\"rect\" coords=\"0,0,200,400\" alt=\"Corporate headquarters\" href=\"location1.htm\">\n <area shape=\"rect\" coords=\"0,0,400,400\" alt=\"Elm Street store\" href=\"location2.htm\">\n <area shape=\"rect\" coords=\"0,0,600,400\" alt=\"Maple Street store\" href=\"location3.htm\">\n </map>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/server-side-image-map/\n https://dequeuniversity.com/rules/axe/4.4/server-side-image-map",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Minor",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 89,
    "RuleID": "skip-link",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "Ensure all skip links have a focusable target",
    "Description [Deque]": "",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "NA",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/skip-link?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 90,
    "RuleID": "svg-img-alt",
    "Level": "A",
    "Checkpoint": "1.1.1 Non-text content",
    "Category": "Content",
    "Summary": "Missing: alt text on SVG",
    "SuccessCriteria": "wcag111",
    "Description [Deque]": "Ensures SVG elements with an <img>, graphics-document or graphics-symbol role have an accessible text alternative.",
    "Description (2) [accessiblity insights] Microsoft": "An <svg> element with an image or graphics role must have alternative text.",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "An SVG element with image or graphics roles is missing required alternative text.",
    "Recommendation": "Action: Add an accessible name to each <svg> element with role=\"img\", role=\"graphics-document\", or role=\"graphics-symbol\".\n \nHow to fix:\nUse one of the following methods:\n \nGood\n• title attribute\n• child <title> element\n \nBetter\n• aria-label attribute\n \nBest\n• aria-labelledby attribute",
    "ValueStatement": "An <svg> element is a container for images and graphics.\n \nAlternative text (definition): A word or phrase that is coded in such a way that assistive tech can associate it with a specific image, graphic, or visual object. Alt text equally conveys the information in the image, graphic, or visual object, including any relevant text that may appear.\n \nMost assistive technology cannot currently interpret an image on its own. Therefore, alternative text must be added, to convey the image meaning to assistive tech users.\n \nWhen an <svg> element marked with role=\"img\", role=\"graphics-document\", or role=\"graphics-symbol\" has no alternative text, its purpose and meaning are not conveyed to assistive tech users.",
    "SuggestedCode": "The <svg> element gets alternative text through an aria-labelledby element referencing visible text in a paragraph. All users are now informed that the image is a red circle.\n \n <p id=\"circle\">A red circle</p>\n <svg role=\"img\" width=\"100\" height=\"100\" aria-labelledby=\"circle\">\n <circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"red\">\n </circle>\n </svg>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/svg-img-alt/\n https://dequeuniversity.com/rules/axe/4.4/svg-img-alt",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Mobility",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 91,
    "RuleID": "tabindex",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensures tabindex attribute values are not greater than 0",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/tabindex?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 92,
    "RuleID": "table-duplicate-name",
    "Level": "",
    "Checkpoint": "",
    "Category": "",
    "Summary": "",
    "SuccessCriteria": "",
    "Description [Deque]": "Ensure the <caption> element does not contain the same text as the summary attribute",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "",
    "Recommendation": "",
    "ValueStatement": "",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/table-duplicate-name?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": "yes"
  },
  {
    "Sino": 93,
    "RuleID": "table-fake-caption",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "Fake caption",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "Ensure that tables with a caption use the <caption> element.",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "This data table uses a data or header cell as a caption. This is not allowed.",
    "Recommendation": "Action: Use a real caption element.\n\nHow to fix:\n1. Use a <caption> element rather than a data or header cell.\n2. Cells with a <colspan> element that visually indicate a caption are not allowed: do not use.",
    "ValueStatement": "In a table, header or data cells are not coded for assistive tech to understand them as captions, no matter how they are styled.\n\nAs a result, assistive tech users are not able to understand this as a table caption.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/table-fake-caption?application=axeAPI",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 94,
    "RuleID": "target-size",
    "Level": "AA",
    "Checkpoint": "2.5.8 Target Size",
    "Category": "",
    "Summary": "Insufficient target size/space",
    "SuccessCriteria": "wcag258",
    "Description [Deque]": "Ensure touch target have sufficient size and space",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "This touch target is too small, or is too close to another touch target.",
    "Recommendation": "Action: Make touch target larger, with a comfortable space margin around it.\n\nHow to fix:\n1. Make touch target at least 24x24 CSS pixels, or larger.\n2. If the touch target is smaller than 24x24, be sure to leave a 24px space between this touch target and any other touch target.",
    "ValueStatement": "Users with mobility impairment, hand or other tremors, users who have difficulty with fine motor coordination, or those who are using one hand or simply have larger fingers, are some of the people who require reasonably sized touch targets.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/target-size?application=axeAPI",
    "ReferencesW3C": "",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 95,
    "RuleID": "td-has-header",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "Orphaned data in large table",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "Ensure that each non-empty data cell in a <table> larger than 3 by 3 has one or more table headers",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "In this large table, a cell containing information has no table header. This is not allowed.",
    "Recommendation": "Action: Add a properly marked header.\n\nHow to fix:\n1. Determine if the table is considered large. Does it have 3 or more cells per row and 3 or more cells per column?\n2. If the table is large:\n  2a. Locate the data cell that has no header.\n  2b. Find the corresponding cell in the header row: that is, in the same column.\n  2c. Examine the other header cells.\n  2d. Determine the logical header for your data.\n  2e. Add the correct data to the header cell.\n  2f. Mark the table cell as a header cell: change <td> to <th>.",
    "ValueStatement": "Tables that are missing required structural elements, or tables that are not properly marked up semantically, cannot correctly convey their information to screen reader and assistive tech users.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.7/td-has-header?application=axeAPI",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "",
    "DisabilitiesAffected": "",
    "Level__1": "",
    "BestPractice": ""
  },
  {
    "Sino": 96,
    "RuleID": "td-headers-attr",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "Out-of-scope table cell",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "Data table markup can be tedious and confusing. Markup tables semantically and with the correct header structure. Screen readers have features to ease table navigation, but tables must be marked up accurately for these features to work correctly.",
    "Description (2) [accessiblity insights] Microsoft": "The headers attribute in a <table> element must refer to a cell within the same table.",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "This table uses the headers attribute. However, this table contains a cell that refers to a cell located in another table. This is not allowed.",
    "Recommendation": "Action: Make sure that in a table with the headers attribute, no cells refer to a cell outside the same table.\n \nHow to fix:\nIf the headers attribute is set for your table, use one of the following techniques:\n1. Add the <scope> attribute value <col> or <row> to each <th> set within a <tr> element.\n2. Or, for headers that span columns/rows, add spanning header markup: <colgroup> or <rowgroup> values in the <scope> attribute.\n\nThe <scope> values will examine all references in the table that point to header columns and rows, and make sure that the references connect to particular <td> elements.",
    "ValueStatement": "In a table, a header cell and a data cell are programmatically related if they are coded in such a way that assistive tech can accurately determine their relationship.\n\nWhen a data cell in a table with a headers attribute has a reference that points to a cell in a different table, the programmatic relationship is not defined in a way that assistive tech can recognize.\n \nAs a result, assistive tech users are not able to follow which header cell goes with a given data cell.",
    "SuggestedCode": "<th> cells have been added to the second table. Assistive tech can now correctly identify column headers for both tables.\n \n<table>\n <caption>East Branch Members</caption>\n <tr>\n <th id=\"name\">Name</th>\n <th id=\"email\">E-mail</th>\n <th id=\"phone\">Phone</th>\n <th id=\"city\">City</th>\n </tr>\n <tr>\n <td headers=\"name\">Alexandra Gunderson</td>\n <td headers=\"email\">alexg@company.com</td>\n <td headers=\"phone\">1-234-5678</td>\n <td headers=\"city\">Charlotte</td>\n </tr>\n …\n </table>\n <table>\n <caption>West Branch Members</caption>\n <tr>\n <th id=\"name\">Name</th>\n <th id=\"email\">E-mail</th>\n <th id=\"phone\">Phone</th>\n <th id=\"city\">City</th>\n </tr>\n <tr>\n <td headers=\"name\">Mary Gonzales</td>\n <td headers=\"email\">mary@company.com</td>\n <td headers=\"phone\">1-234-5678</td>\n <td headers=\"city\">Portland</td>\n </tr>\n <td headers=\"name\">Li Shen</td>\n ...\n </table>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/td-headers-attr/\n https://dequeuniversity.com/rules/axe/4.4/td-headers-attr",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 97,
    "RuleID": "th-has-data-cells",
    "Level": "A",
    "Checkpoint": "1.3.1 Info and Relationships",
    "Category": "Content",
    "Summary": "Widowed header",
    "SuccessCriteria": "wcag131",
    "Description [Deque]": "Data table markup can be tedious and confusing. Markup tables semantically and with the correct header structure. Screen readers have features to ease table navigation, but tables must be marked up accurately for these features to work correctly.",
    "Description (2) [accessiblity insights] Microsoft": "A <th> element or element with role=\"columnheader\" or role=\"rowheader\" must have an associated <td> element.",
    "CSR": "YEs",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "In this table, a table header with a column or row header role is not associated with a table data element. This is not allowed.",
    "Recommendation": "Action: Make sure each <th> element, and each element with the columnheader or rowheader roles, has an associated data cell.\n \nHow to fix:\nFor each <th> element:\n1. Make sure it does not use the <headers> attribute.\n2. Make sure it is only used in a table with a single header row or single header column.\n3. Make sure the <th> element uses the <scope> attribute.\n4. If no cell is associated with the header, correctly associate the <th> element with its corresponding <td> element.",
    "ValueStatement": "When people with good vision see a table with a row or column header that has no associated data cells, they can tell at a glance that the data is missing.\n \nAssistive tech users must explore a table deliberately to discover its contents. They are likely to have difficulty interpreting a table with missing data cells.",
    "SuggestedCode": "All <th> elements have associated <td> elements. The table structure is now clear to everyone, and everyone can tell that some data cells are empty.\n \n <table>\n <tr>\n <th scope=\"col\">Name</th>\n <th scope=\"col\">E-mail</th>\n <th scope=\"col\">City</th>\n </tr>\n <tr>\n <td>Mary Gonzales</td>\n <td>mary@company.com</td>\n <td>Seattle</td>\n </tr>\n <tr>\n <td>Arvind Gupta</td>\n <td>arvind@company.com</td>\n <td></td>\n </tr>\n <tr>\n <td>Selena Anders</td>\n <td>selena@company.com</td>\n <td></td>\n </tr>\n </table>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/th-has-data-cells/\n https://dequeuniversity.com/rules/axe/4.4/th-has-data-cells",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind",
    "Level__1": "WCAG 2.1 (A)",
    "BestPractice": ""
  },
  {
    "Sino": 98,
    "RuleID": "valid-lang",
    "Level": "AA",
    "Checkpoint": "3.1.2 Language of parts",
    "Category": "Structure",
    "Summary": "Invalid lang attribute",
    "SuccessCriteria": "wcag312",
    "Description [Deque]": "The language specified in the HTML document must be one of the valid languages to ensure text is pronounced correctly for screen reader users.",
    "Description (2) [accessiblity insights] Microsoft": "The lang attribute must have a valid value.",
    "CSR": "Yes",
    "Widget Coverage": "Partial",
    "Description3 [UserWay]": "The lang attribute has an invalid language value.",
    "Recommendation": "Action: Add a valid lang attribute value.\n \nHow to fix:\n1. Identify the language for the text.\n2. Choose the corresponding language code from the IANA Language Subtag Registry.\n3. Make sure the value is spelled correctly.",
    "ValueStatement": "Sometimes a web page written in one language has a word or phrase in a different language.\n \nThe language of such a word or phrase must be correctly identified by a lang attribute on the containing element.\n \nThen, browsers and assistive tech can render the text more accurately; screen readers can use the correct pronunciation; visual browsers can display the correct characters; and media players can show captions correctly. All users find it easier to understand the content.",
    "SuggestedCode": "The phrase has the correct language attribute: Spanish. Screen readers announce the phrase using correct pronunciation, making it easier to understand.\n \n \n <html lang=\"en-US>\n …\n <body>\n …\n <span id=\"original\">The quick brown fox jumps over the lazy dog.</span>\n …\n <span id=\"translation\" lang=\"es\"> El rápido zorro marrón salta sobre el perro perezoso.</span>",
    "Reference (not used)": "https://accessibilityinsights.io/info-examples/web/valid-lang/\n https://dequeuniversity.com/rules/axe/4.4/valid-lang",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-parts",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind\n DeafBlind\n Cognitive",
    "Level__1": "WCAG 2.1 (AA)",
    "BestPractice": ""
  },
  {
    "Sino": 99,
    "RuleID": "video-caption",
    "Level": "A",
    "Checkpoint": "1.2.2 Captions (prerecorded)",
    "Category": "Audio and Video",
    "Summary": "Missing: captions on video",
    "SuccessCriteria": "wcag122",
    "Description [Deque]": "An HTML5 video element must include a track element with kind=\"captions\" set as a property. The captions should convey all meaningful auditory information in the video including dialogue, musical cues, sound effects, and other relevant information for deaf users.",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "No",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "This HTML5 <video> element is missing a required captions track.",
    "Recommendation": "Action: Add a captions track to the video element.\n \nHow to fix:\nAdd a captions track as a track element with kind=\"captions\".\n \nCaptions should be synchronized with the video, and should convey dialogue, musical cues, sound cues, sound effects, and any other meaningful, relevant audio information.",
    "ValueStatement": "Captions communicate the audio content of a video, so that users who cannot hear can still understand its content.",
    "SuggestedCode": "",
    "Reference (not used)": "https://dequeuniversity.com/rules/axe/4.5/video-caption",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/captions-prerecorded",
    "WCAGURL": "",
    "Impact": "Critical",
    "DisabilitiesAffected": "Deaf",
    "Level__1": "WCAG 2.1 (AA)",
    "BestPractice": ""
  },
  {
    "Sino": 100,
    "RuleID": "aria-prohibited-attr",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "",
    "Summary": "Prohibited  aria attributes for an element",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Elements must only use permitted ARIA attributes",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "Elements must only use permitted ARIA attributes",
    "Recommendation": "Change the role to one on which the attribute is not prohibited\nProvide the information as text in the page.\nMove the attribute to a different element that does support it.",
    "ValueStatement": "Prohibited attributes are often used in an attempt to communicate information that then ends up ignored by screen readers and other assistive technologies. If the information conveyed is not important, the attribute can be ignored.",
    "SuggestedCode": "",
    "Reference (not used)": "",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind,DeafBlind,Mobility",
    "Level__1": "WCAG 2.1(AA)",
    "BestPractice": ""
  },
    {
    "Sino": 101,
    "RuleID": "aria-deprecated-role",
    "Level": "A",
    "Checkpoint": "4.1.2 Name, Role, Value",
    "Category": "",
    "Summary": "Deprecated  aria attributes for an element",
    "SuccessCriteria": "wcag412",
    "Description [Deque]": "Elements must only use permitted ARIA attributes",
    "Description (2) [accessiblity insights] Microsoft": "",
    "CSR": "Yes",
    "Widget Coverage": "No",
    "Description3 [UserWay]": "Elements must only use permitted ARIA attributes",
    "Recommendation": "Change the role to one on which the attribute is not prohibited\nProvide the information as text in the page.\nMove the attribute to a different element that does support it.",
    "ValueStatement": "Prohibited attributes are often used in an attempt to communicate information that then ends up ignored by screen readers and other assistive technologies. If the information conveyed is not important, the attribute can be ignored.",
    "SuggestedCode": "",
    "Reference (not used)": "",
    "ReferencesW3C": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value",
    "WCAGURL": "",
    "Impact": "Serious",
    "DisabilitiesAffected": "Blind,DeafBlind,Mobility",
    "Level__1": "WCAG 2.1(AA)",
    "BestPractice": ""
  }
]